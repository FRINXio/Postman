{
	"info": {
		"_postman_id": "93e3c2f2-68ab-413f-ab25-3e4301cc11b8",
		"name": "pc_unative_RPC_scale_test",
		"description": "This is a scale test on uniconfig-native, by realizing a CRUD test on the n mounted devices.\nBefore to run the test is necessary to setup Frinx ODL, netconf-testool, and mount the devices with the bash script.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "setup testtool devices",
			"item": [
				{
					"name": "setup config to testtool device",
					"item": [
						{
							"name": "setup config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70042dae-e1e4-40c9-82ed-7181a12e65b2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a9889b3-07f5-43de-af08-2d9d08a1757c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frinx-uniconfig-topology:configuration\": {\n        \"Cisco-IOS-XR-man-netconf-cfg:netconf-yang\": {\n            \"agent\": {\n                \"ssh\": {\n                    \"enable\": [\n                        null\n                    ]\n                }\n            }\n        },\n        \"Cisco-IOS-XR-crypto-sam-cfg:crypto\": {\n            \"Cisco-IOS-XR-crypto-ssh-cfg:ssh\": {\n                \"server\": {\n                    \"timeout\": 120,\n                    \"netconf-vrf-table\": {\n                        \"vrf\": [\n                            {\n                                \"vrf-name\": \"default\",\n                                \"enable\": [\n                                    null\n                                ]\n                            }\n                        ]\n                    },\n                    \"v2\": [\n                        null\n                    ]\n                }\n            }\n        },\n        \"Cisco-IOS-XR-ifmgr-cfg:interface-configurations\": {\n            \"interface-configuration\": [\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/5\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/4\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/3\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/2\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/1\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/0\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"MgmtEth0/0/CPU0/0\",\n                    \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                        \"addresses\": {\n                            \"primary\": {\n                                \"address\": \"192.168.1.213\",\n                                \"netmask\": \"255.255.255.0\"\n                            }\n                        }\n                    }\n                }\n            ]\n        },\n        \"Cisco-IOS-XR-aaa-locald-admin-cfg:aaa\": {\n            \"usernames\": {\n                \"username\": [\n                    {\n                        \"name\": \"foo\",\n                        \"usergroup-under-usernames\": {\n                            \"usergroup-under-username\": [\n                                {\n                                    \"name\": \"root-system\"\n                                }\n                            ]\n                        },\n                        \"secret\": \"$1$ByNm$UDiThO30q480ryjw.jevd/\"\n                    }\n                ]\n            }\n        },\n        \"Cisco-IOS-XR-shellutil-cfg:host-names\": {\n            \"host-name\": \"PE3\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/configuration/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"configuration",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"interface-name\"]).to.eql(\"MgmtEth0/0/CPU0/0\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"192.168.1.213\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.0\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31358e04-53fb-45ee-92ce-e516f2f7fc73",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function() {",
											"    pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t \n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup calculate diff",
					"item": [
						{
							"name": "setup calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Validate no diff\", function() {",
											"            pm.expect(pm.response.json()[\"output\"]).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show testtool device netconf existence",
					"item": [
						{
							"name": "setup show testtool device netconf existence",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Device existence in netconf\", function () {",
											"    pm.expect(pm.response.json()).to.eql({});",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show testtool device unified existence",
					"item": [
						{
							"name": "setup show testtool device unified existence",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Device existence in netconf\", function () {",
											"    pm.expect(pm.response.json()).to.eql({});",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/unified/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"unified",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "create",
			"item": [
				{
					"name": "create add interface to testtool device",
					"item": [
						{
							"name": "add interface to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38384ba3-c33e-44f6-944f-e87fa16e3e38",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}\n\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31358e04-53fb-45ee-92ce-e516f2f7fc73",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function() {",
											"    pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t \n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create calculate diff",
					"item": [
						{
							"name": "create calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Validate no diff\", function() {",
											"            pm.expect(pm.response.json()[\"output\"]).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "update",
			"item": [
				{
					"name": "update add config to testtool device",
					"item": [
						{
							"name": "update config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70042dae-e1e4-40c9-82ed-7181a12e65b2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a9889b3-07f5-43de-af08-2d9d08a1757c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"update description\",\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update calculate diff all testtool devices",
					"item": [
						{
							"name": "update calculate diff all testtool devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2c72371-daa9-480c-800c-fe79f2831d9c",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// All devices must have a difference inside their configs",
											"pm.test(\"Check N devices have diff\", function() {",
											"    pm.expect(pm.response.json()[\"output\"][\"node-with-diff\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check interface\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.contain(\"Loopback123\")",
											"});",
											"pm.test(\"Check updated description\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.contain(\"update description\")",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31358e04-53fb-45ee-92ce-e516f2f7fc73",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function() {",
											"    pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"    ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t \n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update calculate diff",
					"item": [
						{
							"name": "update calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Validate no diff\", function() {",
											"            pm.expect(pm.response.json()[\"output\"]).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "delete config to testtool device",
					"item": [
						{
							"name": "delete config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70042dae-e1e4-40c9-82ed-7181a12e65b2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a9889b3-07f5-43de-af08-2d9d08a1757c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//Check each node has commit complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if (typeof pm.response.json()[\"output\"][\"node-config-results\"] !== 'undefined'){",
											"    for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"          pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"    } ",
											"  }",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "349ddc7f-6e30-4627-ad1b-a14912b3d543",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//Check each node has commit complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if (typeof pm.response.json()[\"output\"][\"node-config-results\"] !== 'undefined'){",
											"    for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"          pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"    } ",
											"  }",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a372704-8b00-43b2-93db-43eb998ef45a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31358e04-53fb-45ee-92ce-e516f2f7fc73",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function() {",
											"    pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t \n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete calculate diff",
					"item": [
						{
							"name": "delete calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Validate no diff\", function() {",
											"            pm.expect(pm.response.json()[\"output\"]).to.be.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}