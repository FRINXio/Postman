{
	"info": {
		"_postman_id": "74e115fa-bab7-4bdf-8923-004ba6988e95",
		"name": "pc_unative_RPC_scale_test",
		"description": "This is a scale test on uniconfig-native, by realizing a CRUD test on the n mounted devices.\nBefore to run the test is necessary to setup Frinx ODL, netconf-testool, and mount the devices with the bash script.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "setup testtool devices",
			"item": [
				{
					"name": "setup config to testtool device",
					"item": [
						{
							"name": "setup config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3abea5b6-52de-46ef-b403-4d88a24ce106",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b9b865d4-374e-4f02-8f0e-d453460f40e0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"frinx-uniconfig-topology:configuration\": {\n        \"Cisco-IOS-XR-man-netconf-cfg:netconf-yang\": {\n            \"agent\": {\n                \"ssh\": {\n                    \"enable\": [\n                        null\n                    ]\n                }\n            }\n        },\n        \"Cisco-IOS-XR-crypto-sam-cfg:crypto\": {\n            \"Cisco-IOS-XR-crypto-ssh-cfg:ssh\": {\n                \"server\": {\n                    \"timeout\": 120,\n                    \"netconf-vrf-table\": {\n                        \"vrf\": [\n                            {\n                                \"vrf-name\": \"default\",\n                                \"enable\": [\n                                    null\n                                ]\n                            }\n                        ]\n                    },\n                    \"v2\": [\n                        null\n                    ]\n                }\n            }\n        },\n        \"Cisco-IOS-XR-ifmgr-cfg:interface-configurations\": {\n            \"interface-configuration\": [\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/5\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/4\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/3\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/2\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/1\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"GigabitEthernet0/0/0/0\",\n                    \"shutdown\": [\n                        null\n                    ]\n                },\n                {\n                    \"active\": \"act\",\n                    \"interface-name\": \"MgmtEth0/0/CPU0/0\",\n                    \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                        \"addresses\": {\n                            \"primary\": {\n                                \"address\": \"192.168.1.213\",\n                                \"netmask\": \"255.255.255.0\"\n                            }\n                        }\n                    }\n                }\n            ]\n        },\n        \"Cisco-IOS-XR-aaa-locald-admin-cfg:aaa\": {\n            \"usernames\": {\n                \"username\": [\n                    {\n                        \"name\": \"foo\",\n                        \"usergroup-under-usernames\": {\n                            \"usergroup-under-username\": [\n                                {\n                                    \"name\": \"root-system\"\n                                }\n                            ]\n                        },\n                        \"secret\": \"$1$ByNm$UDiThO30q480ryjw.jevd/\"\n                    }\n                ]\n            }\n        },\n        \"Cisco-IOS-XR-shellutil-cfg:host-names\": {\n            \"host-name\": \"PE3\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/configuration/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"configuration",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9e8f59f-d869-494b-af87-4ed60b764b6b",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function () {",
											"  //console.log(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-results\"][\"node-result\"]) {",
											"    pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  }",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f89de4b-f38c-4594-ae24-666426857774",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21e7cd94-0574-462e-a8e1-eb8710991c67",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"interface-name\"]).to.eql(\"MgmtEth0/0/CPU0/0\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"192.168.1.213\");",
											"    pm.expect(pm.response.json()[\"interface-configurations\"][\"interface-configuration\"][6][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.0\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "365adb47-cded-48ba-a441-8a8e8c4aca1a",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup calculate diff",
					"item": [
						{
							"name": "setup calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd28e3b5-420f-46f0-8dd5-85f611add4e4",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"pm.test(\"Validate no diff\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"][0]).to.not.have.any.keys('deleted-data', 'created-data', 'updated-data');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show testtool device netconf existence",
					"item": [
						{
							"name": "setup show testtool device netconf existence",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0813a43e-0310-4db7-bf1f-beca9d102cf5",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Device existence in netconf\", function () {",
											"    pm.expect(pm.response.json()).to.eql({});",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "setup show testtool device unified existence",
					"item": [
						{
							"name": "setup show testtool device unified existence",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e13b655-cd56-4a6a-af80-fd004ed6da2d",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Device existence in netconf\", function () {",
											"    pm.expect(pm.response.json()).to.eql({});",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/unified/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"unified",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "create",
			"item": [
				{
					"name": "create add interface to testtool device",
					"item": [
						{
							"name": "add interface to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0633bd2f-e32e-4f7c-8872-6c873eaad9ef",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}\n\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "621c2bf4-2bdc-4372-b828-fb6c17476d1a",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function () {",
											" // console.log(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-results\"][\"node-result\"]) {",
											"    pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  }",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1ffb4b2-9f50-47a7-918d-b2f625518d5d",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe38c03a-aca7-4848-90e6-9b14955b7140",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6c88826-6765-4373-aae1-6c0c398ff9f2",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "create calculate diff",
					"item": [
						{
							"name": "create calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c7a855b8-90d3-4c97-acd6-e4822d7a2933",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"pm.test(\"Validate no diff\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"][0]).to.not.have.any.keys('deleted-data', 'created-data', 'updated-data');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "update",
			"item": [
				{
					"name": "update add config to testtool device",
					"item": [
						{
							"name": "update config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5301a321-48f4-4b4b-a415-061f7644f1af",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "763495c7-9dee-44af-a137-1646324a67f8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"update description\",\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update calculate diff all testtool devices",
					"item": [
						{
							"name": "update calculate diff all testtool devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ded14d53-ad9a-4236-a7d7-310f7dfa9b65",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// All devices must have a difference inside their configs",
											"pm.test(\"Check N devices have diff\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e953f117-e597-4d2f-83fd-882596703bc1",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function () {",
											"  //console.log(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-results\"][\"node-result\"]) {",
											"    pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  }",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d12897d-c086-46cb-8784-0edb4c014614",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  console.log(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"      pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  } ",
											"  ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db9c576f-60a7-421a-b9ca-28e18ccbedd4",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check interface\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.contain(\"Loopback123\")",
											"});",
											"pm.test(\"Check updated description\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.contain(\"update description\")",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb2fc79e-237d-4fdd-98cb-085161294db2",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "update calculate diff",
					"item": [
						{
							"name": "update calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf836b51-091f-46db-ad15-fffdcd1143f6",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"pm.test(\"Validate no diff\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"][0]).to.not.have.any.keys('deleted-data', 'created-data', 'updated-data');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "delete config to testtool device",
					"item": [
						{
							"name": "delete config to testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2468145f-fb15-465c-be6f-4868eee5a04a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d36b4776-8dca-4c00-b169-5e7a7f8ec1fc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete commit all devices",
					"item": [
						{
							"name": "commit all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "090fa152-2871-4b5e-a58d-0608750ce383",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Validate overall-configuration-status\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//check that each node has configuration-status complete",
											"pm.test(\"Validate configuration-status\", function () {",
											" // console.log(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"])",
											"  for (var node of pm.response.json()[\"output\"][\"node-results\"][\"node-result\"]) {",
											"    pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"  }",
											"",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete commit single device",
					"item": [
						{
							"name": "commit single device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce072a71-0441-4280-baf5-1188f95c6d16",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"//Check each node has commit complete",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if (typeof pm.response.json()[\"output\"][\"node-config-results\"] !== 'undefined'){",
											"    for (var node of pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"]) {",
											"          pm.expect(node[\"configuration-status\"]).to.eql(\"complete\");",
											"    } ",
											"  }",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t \"node\": [\"{{node_id}}\"]\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete show config in testtool device",
					"item": [
						{
							"name": "show config in testtool device",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0610e61-3db9-4866-8e9f-5da1842a6270",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/topology-netconf/node/{{node_id}}/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete sync from network",
					"item": [
						{
							"name": "sync-from-network all devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6a52d75e-29bb-40be-b2d7-60f77a8b1df5",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// check the number of devices synced",
											"pm.test(\"Check N devices synced\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"].length).to.eql(Number(pm.environment.get(\"device_number\")));",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "delete calculate diff",
					"item": [
						{
							"name": "delete calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dccf36af-4547-403f-86b0-c9d8970ac8a8",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"pm.test(\"Validate no diff\", function () {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-results\"][\"node-result\"][0]).to.not.have.any.keys('deleted-data', 'created-data', 'updated-data');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{data}}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}