{
	"info": {
		"_postman_id": "c7ba317b-21a4-4e7e-9a27-d5652362c386",
		"name": "Learning_Lab_part6",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create ipv4 access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "529c3c27-35bb-4d02-ba0a-68d2cd5319bf",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"acl-set\": [\n        {\n            \"name\": \"{{iacl_in-acl-name1}}\",\n            \"type\": \"frinx-openconfig-acl:ACL_IPV4\",\n            \"config\": {\n            \t\"name\": \"{{iacl_in-acl-name1}}\",\n            \t\"type\": \"frinx-openconfig-acl:ACL_IPV4\"\n            },\n            \"acl-entries\": {\n                \"acl-entry\": [\n                    {\n                        \"sequence-id\": \"10\",\n                        \"config\": {\n                            \"sequence-id\": \"10\"\n                        },\n                        \"ipv4\": {\n                            \"config\": {\n                            \t\"protocol\": \"frinx-openconfig-packet-match-types:IP_PROTOCOL\",\n                            \t\"source-address\": \"0.0.0.0/0\",\n                            \t\"destination-address\": \"0.0.0.0/0\"\n                        \t}\n                        },\n                        \"actions\": {\n                            \"config\": {\n                            \t\"forwarding-action\": \"frinx-openconfig-acl:DROP\"\n                        \t}\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/acl-set/{{iacl_in-acl-name1}}/frinx-openconfig-acl:ACL_IPV4",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						"acl-set",
						"{{iacl_in-acl-name1}}",
						"frinx-openconfig-acl:ACL_IPV4"
					]
				}
			},
			"response": []
		},
		{
			"name": "create ipv6 access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0800eb6e-5c16-4423-b6c4-5786c97a5f84",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"frinx-openconfig-acl:acl-set\": [\n        {\n            \"type\": \"frinx-openconfig-acl:ACL_IPV6\",\n            \"name\": \"{{iacl_in-acl-name2}}\",\n            \"config\": {\n                \"name\": \"{{iacl_in-acl-name2}}\",\n                \"type\": \"frinx-openconfig-acl:ACL_IPV6\"\n            },\n            \"acl-entries\": {\n                \"acl-entry\": [\n                    {\n                        \"sequence-id\": 2,\n                        \"ipv6\": {\n                            \"config\": {\n                                \"protocol\": \"frinx-openconfig-packet-match-types:IP_UDP\",\n                                \"source-address\": \"10:11:12::2/128\",\n                                \"destination-address\": \"::/0\"\n                            }\n                        },\n                        \"config\": {\n                            \"sequence-id\": 2\n                        },\n                        \"actions\": {\n                            \"config\": {\n                                \"forwarding-action\": \"frinx-openconfig-acl:DROP\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/acl-set/{{iacl_in-acl-name2}}/frinx-openconfig-acl:ACL_IPV6",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						"acl-set",
						"{{iacl_in-acl-name2}}",
						"frinx-openconfig-acl:ACL_IPV6"
					]
				}
			},
			"response": []
		},
		{
			"name": "commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2caf21de-6da4-4e86-bdbc-8221eb5701a2",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"dryrun - overall-configuration-status complete\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							"pm.test(\"dryrun - node-id\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"});",
							"pm.test(\"dryrun - configuration status\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:commit"
					]
				}
			},
			"response": []
		},
		{
			"name": "sync from network",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a55c4890-4d46-494b-a510-7f045d81eced",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate configuration-status\", function() {",
							"  if ( \"node-sync-result\" in pm.response.json()[\"output\"] ){",
							"  pm.expect(pm.response.json()[\"output\"][\"node-sync-results\"][\"node-sync-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"    pm.expect(pm.response.json()[\"output\"][\"node-sync-results\"][\"node-sync-result\"][0]).to.not.have.own.property(\"error-type\");",
							"  }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:sync-from-network"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace config with operational",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1be6f510-e7f5-4f59-8698-1c7f4960db5d",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Validate result\", function() {",
							"  pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:replace-config-with-operational"
					]
				}
			},
			"response": []
		},
		{
			"name": "show created access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "229eb4ac-4683-40ad-b55f-8be6eecc0d3d",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"config\"][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex6-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex6-20171218-01\");",
							"});",
							"//id",
							"pm.test(\"Validate id = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"config\"][\"id\"]).to.eql(\"TenGigE0/0/2/1\");",
							"});",
							"//id",
							"pm.test(\"Validate id = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"id\"]).to.eql(\"TenGigE0/0/2/1\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(\"190\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"set-name\"]).to.eql(\"190\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"config\"][\"set-name\"]).to.eql(\"Secu-To-Internet\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"set-name\"]).to.eql(\"Secu-To-Internet\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operational",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "remove ipv4 access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d966c87c-3bda-4c4e-a393-af8612b2a850",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/acl-set/{{iacl_in-acl-name1}}/frinx-openconfig-acl:ACL_IPV4",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						"acl-set",
						"{{iacl_in-acl-name1}}",
						"frinx-openconfig-acl:ACL_IPV4"
					]
				}
			},
			"response": []
		},
		{
			"name": "remove ipv6 access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b895cd37-d0ef-462d-bff9-25d50c4e8f51",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/acl-set/{{iacl_in-acl-name2}}/frinx-openconfig-acl:ACL_IPV6",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						"acl-set",
						"{{iacl_in-acl-name2}}",
						"frinx-openconfig-acl:ACL_IPV6"
					]
				}
			},
			"response": []
		},
		{
			"name": "commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2caf21de-6da4-4e86-bdbc-8221eb5701a2",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"dryrun - overall-configuration-status complete\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							"pm.test(\"dryrun - node-id\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"});",
							"pm.test(\"dryrun - configuration status\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:commit"
					]
				}
			},
			"response": []
		},
		{
			"name": "sync from network",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a55c4890-4d46-494b-a510-7f045d81eced",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate configuration-status\", function() {",
							"  if ( \"node-sync-result\" in pm.response.json()[\"output\"] ){",
							"  pm.expect(pm.response.json()[\"output\"][\"node-sync-results\"][\"node-sync-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"    pm.expect(pm.response.json()[\"output\"][\"node-sync-results\"][\"node-sync-result\"][0]).to.not.have.own.property(\"error-type\");",
							"  }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:sync-from-network"
					]
				}
			},
			"response": []
		},
		{
			"name": "replace config with operational",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1be6f510-e7f5-4f59-8698-1c7f4960db5d",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Validate result\", function() {",
							"  pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:replace-config-with-operational"
					]
				}
			},
			"response": []
		},
		{
			"name": "show deleted access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "229eb4ac-4683-40ad-b55f-8be6eecc0d3d",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"config\"][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex6-20171218-01\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][1][\"set-name\"]).to.eql(\"Ten0_2_0_0-ex6-20171218-01\");",
							"});",
							"//id",
							"pm.test(\"Validate id = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"config\"][\"id\"]).to.eql(\"TenGigE0/0/2/1\");",
							"});",
							"//id",
							"pm.test(\"Validate id = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"id\"]).to.eql(\"TenGigE0/0/2/1\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(\"190\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV4\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"set-name\"]).to.eql(\"190\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"config\"][\"set-name\"]).to.eql(\"Secu-To-Internet\");",
							"});",
							"//type",
							"pm.test(\"Validate type = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-acl:ACL_IPV6\");",
							"});",
							"//set-name",
							"pm.test(\"Validate set-name = \", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][1][\"set-name\"]).to.eql(\"Secu-To-Internet\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/acl-sets/",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operational",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"acl-sets",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "place access list on an interface",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad8c4ab0-ee3a-4f37-a76a-909ebb75e465",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"interface\": [\n        {\n            \"id\": \"{{iacl_intf-id}}\",\n            \"ingress-acl-sets\": {\n                \"ingress-acl-set\": [\n                    {\n                        \"set-name\": \"{{iacl_in-acl-name1}}\",\n                        \"type\": \"ACL_IPV4\",\n                        \"config\": {\n                            \"set-name\": \"{{iacl_in-acl-name1}}\",\n                            \"type\": \"ACL_IPV4\"\n                        }\n                    }\n                ]\n            },\n            \"egress-acl-sets\": {\n                \"egress-acl-set\": [\n                    {\n                        \"set-name\": \"{{iacl_out-acl-name1}}\",\n                        \"type\": \"ACL_IPV6\",\n                        \"config\": {\n                            \"set-name\": \"{{iacl_out-acl-name1}}\",\n                            \"type\": \"ACL_IPV6\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/interfaces/interface/{{iacl_url_intf-id}}",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"interfaces",
						"interface",
						"{{iacl_url_intf-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2caf21de-6da4-4e86-bdbc-8221eb5701a2",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"dryrun - overall-configuration-status complete\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							"pm.test(\"dryrun - node-id\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"});",
							"pm.test(\"dryrun - configuration status\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:commit"
					]
				}
			},
			"response": []
		},
		{
			"name": "show placed access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95803c83-6d84-4582-957f-23dadf277dec",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate egress presence\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0]).to.have.property(\"ingress-acl-sets\")",
							"});",
							"",
							"pm.test(\"Validate config ingress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_in-acl-name1\"));",
							"});",
							"pm.test(\"Validate ingress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_in-acl-name1\"));",
							"});",
							"pm.test(\"Validate id\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"id\"]).to.eql(postman.getEnvironmentVariable(\"iacl_intf-id\"));",
							"});",
							"",
							"pm.test(\"Validate egress presence\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0]).to.have.property(\"egress-acl-sets\")",
							"});",
							"",
							"pm.test(\"Validate config egress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_out-acl-name1\"));",
							"});",
							"",
							"pm.test(\"Validate egress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_out-acl-name1\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/interfaces/interface/{{iacl_url_intf-id}}",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operational",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"interfaces",
						"interface",
						"{{iacl_url_intf-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete access list from an interface",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "442cc91c-76b4-4d10-97f4-cf086a395f8d",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/interfaces/interface/{{iacl_url_intf-id}}/ingress-acl-sets",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"config",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"interfaces",
						"interface",
						"{{iacl_url_intf-id}}",
						"ingress-acl-sets"
					]
				}
			},
			"response": []
		},
		{
			"name": "commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2caf21de-6da4-4e86-bdbc-8221eb5701a2",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"dryrun - overall-configuration-status complete\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});",
							"pm.test(\"dryrun - node-id\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"node-id\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
							"});",
							"pm.test(\"dryrun - configuration status\", function() {",
							"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"input\": {\n        \"target-nodes\": {\n            \"node\": [\n                \"{{node_id}}\"\n            ]\n        }\n    }\n}"
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operations",
						"uniconfig-manager:commit"
					]
				}
			},
			"response": []
		},
		{
			"name": "show deleted access list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95803c83-6d84-4582-957f-23dadf277dec",
						"exec": [
							"console.log(\"Response: \" + responseBody)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate egress presence\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0]).to.have.property(\"ingress-acl-sets\")",
							"});",
							"",
							"pm.test(\"Validate config ingress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_in-acl-name1\"));",
							"});",
							"pm.test(\"Validate ingress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"ingress-acl-sets\"][\"ingress-acl-set\"][0][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_in-acl-name1\"));",
							"});",
							"pm.test(\"Validate id\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"id\"]).to.eql(postman.getEnvironmentVariable(\"iacl_intf-id\"));",
							"});",
							"",
							"pm.test(\"Validate egress presence\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0]).to.have.property(\"egress-acl-sets\")",
							"});",
							"",
							"pm.test(\"Validate config egress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"config\"][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_out-acl-name1\"));",
							"});",
							"",
							"pm.test(\"Validate egress acl\", function() {",
							"  pm.expect(pm.response.json()[\"frinx-openconfig-acl:interface\"][0][\"egress-acl-sets\"][\"egress-acl-set\"][0][\"set-name\"]).to.eql(postman.getEnvironmentVariable(\"iacl_out-acl-name1\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46YWRtaW4="
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-acl:acl/interfaces/interface/{{iacl_url_intf-id}}",
					"protocol": "http",
					"host": [
						"{{odl_ip}}"
					],
					"port": "8181",
					"path": [
						"restconf",
						"operational",
						"network-topology:network-topology",
						"topology",
						"uniconfig",
						"node",
						"{{node_id}}",
						"frinx-uniconfig-topology:configuration",
						"frinx-openconfig-acl:acl",
						"interfaces",
						"interface",
						"{{iacl_url_intf-id}}"
					]
				}
			},
			"response": []
		}
	]
}