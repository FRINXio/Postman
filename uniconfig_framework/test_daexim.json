{
	"info": {
		"_postman_id": "e441e3c9-4d33-4c27-8202-f970cbce8739",
		"name": "test_daexim",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "daexim_uniconfig_simple_export",
			"item": [
				{
					"name": "mount_netconf_R1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n\t  \"netconf-node-topology:dry-run-journal-size\": 180\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "mount_netconf_R2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n\t  \"netconf-node-topology:dry-run-journal-size\": 180\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R2"
							]
						}
					},
					"response": []
				},
				{
					"name": "simple_export",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5205e72b-5b9d-4b72-84da-2a8f364def49",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"input\":{\n\n        \"excluded-modules\":[\n\n            { \"module-name\":\"ietf-yang-library\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"ietf-restconf-monitoring\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"opendaylight-inventory\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"netconf\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"ietf-netconf-monitoring\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"network-topology\", \"data-store\":\"operational\" },\n\n            { \"module-name\":\"nc-notifications\", \"data-store\":\"operational\" },\n            \n            { \"module-name\":\"aaa-cert-mdsal\", \"data-store\":\"config\" }\n\n        ]\n\n    }\n\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:simple-export/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:simple-export",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_import_from_scratch",
			"item": [
				{
					"name": "show_netconf_topology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"pm.test(\"Node R1 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_import_from_scratch_carbon",
			"item": [
				{
					"name": "show_netconf_topology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"pm.test(\"Node R1 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][2][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_immediate_import",
			"item": [
				{
					"name": "immediate_import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"input\": {}}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:immediate-import/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:immediate-import",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "show_netconf_topology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"pm.test(\"Node R1 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_immediate_import_carbon",
			"item": [
				{
					"name": "immediate_import",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"input\": {}}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:immediate-batch-import/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:immediate-batch-import",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "show_netconf_topology",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"pm.test(\"Node R1 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][2][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2 existing \", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_whitelist_all_nodes_export",
			"item": [
				{
					"name": "mount_netconf_R1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n\t  \"netconf-node-topology:dry-run-journal-size\": 180\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "mount_netconf_R2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n\t  \"netconf-node-topology:dry-run-journal-size\": 180\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R2"
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_export_all_nodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4aae8fc-824a-49f2-aebf-9527f53e9376",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted export has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                    \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-export",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-export"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_whitelist_all_nodes_import",
			"item": [
				{
					"name": "check_no_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"pm.test(\"Nodes not mounted\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_import_all_nodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ac311dd-ef2e-44f1-ac95-2096d32a4827",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted import has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                    \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-import",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-import"
							]
						}
					},
					"response": []
				},
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_whitelist_one_node_export",
			"item": [
				{
					"name": "mount_netconf_R1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc57501-215d-427a-b2b1-7b74c0dc8669",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n\t  \"netconf-node-topology:dry-run-journal-size\": 180\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "mount_netconf_R2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bdd58ba-9beb-4e52-ad37-c983dfef2a47",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R2"
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_export_one_node",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4aae8fc-824a-49f2-aebf-9527f53e9376",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted export has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                     \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']/network-topology:node[network-topology:node-id='R1']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-export",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-export"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_uniconfig_whitelist_one_node_import",
			"item": [
				{
					"name": "check_no_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"pm.test(\"Nodes not mounted\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_import_single_node",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ac311dd-ef2e-44f1-ac95-2096d32a4827",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted import has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                     \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']/network-topology:node[network-topology:node-id='R1']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-import",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-import"
							]
						}
					},
					"response": []
				},
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_all_nodes_export",
			"item": [
				{
					"name": "mount_netconf_R1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bdd58ba-9beb-4e52-ad37-c983dfef2a47",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "mount_netconf_R2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bdd58ba-9beb-4e52-ad37-c983dfef2a47",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R2"
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_export_all_nodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4aae8fc-824a-49f2-aebf-9527f53e9376",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted export has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                    \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']\"\n                ]\n            }        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-export",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-export"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_all_nodes_import_with_features",
			"item": [
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_all_nodes_import",
			"item": [
				{
					"name": "check_no_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"pm.test(\"Nodes not mounted\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_import_all_nodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ac311dd-ef2e-44f1-ac95-2096d32a4827",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted import has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                    \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-import",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-import"
							]
						}
					},
					"response": []
				},
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1][\"node-id\"]).to.eql(\"R2\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_one_node_export",
			"item": [
				{
					"name": "mount_netconf_R1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bdd58ba-9beb-4e52-ad37-c983dfef2a47",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R1"
							]
						}
					},
					"response": []
				},
				{
					"name": "mount_netconf_R2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bdd58ba-9beb-4e52-ad37-c983dfef2a47",
								"exec": [
									"console.log(\"Request data: \" + request.data.toString());",
									"console.log(\"Response: \" + responseBody)",
									"pm.test(\"Success\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								"node",
								"R2"
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_export_one_node",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4aae8fc-824a-49f2-aebf-9527f53e9376",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted export has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                     \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']/network-topology:node[network-topology:node-id='R1']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-export",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-export"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_one_node_import_with_features",
			"item": [
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 60000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "daexim_unative_whitelist_one_node_import",
			"item": [
				{
					"name": "check_no_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"pm.test(\"Nodes not mounted\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operational",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "whitelisted_import_single_node",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ac311dd-ef2e-44f1-ac95-2096d32a4827",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Result Success\", function () {",
									"    pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(true);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Whitelisted import has been successfully completed.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"input\": {\n        \"whitelisted-paths\": [\n            {\n                \"data-store\": \"config\",\n                \"paths\": [\n                     \"/network-topology:network-topology/network-topology:topology[network-topology:topology-id='topology-netconf']/network-topology:node[network-topology:node-id='R1']\"\n                ]\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/operations/data-export-import:whitelisted-import",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"operations",
								"data-export-import:whitelisted-import"
							]
						}
					},
					"response": []
				},
				{
					"name": "check_mounted_devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03edc63a-086a-4d3a-ba5b-b748277d7052",
								"exec": [
									"console.log(\"Response: \" + responseBody)",
									"",
									"pm.test(\"Status code 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Node R1\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][0][\"node-id\"]).to.eql(\"R1\");",
									"});",
									"pm.test(\"Node R2\", function () {",
									"    pm.expect(pm.response.json()[\"topology\"][0][\"node\"][1]).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d8ee786-69ec-443f-b558-6a6f2a3b409f",
								"exec": [
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4="
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/",
							"protocol": "http",
							"host": [
								"{{odl_ip}}"
							],
							"port": "8181",
							"path": [
								"restconf",
								"config",
								"network-topology:network-topology",
								"topology",
								"{{topology_id_netconf}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}