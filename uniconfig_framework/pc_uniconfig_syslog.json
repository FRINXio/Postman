{
	"info": {
		"_postman_id": "aca8b9ba-f664-43f4-b8b3-56f91f7e8d6f",
		"name": "pc_uniconfig_syslog",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tests",
			"item": [
				{
					"name": "SYSLOG CRUD",
					"item": [
						{
							"name": "create syslog",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface\": [\n        {\n            \"interface-id\": \"{{lag_prefix}}{{lag_inf-id}}\",\n            \"config\": {\n                \"interface-id\": \"{{lag_prefix}}{{lag_inf-id}}\",\n                \"enabled-logging-for-event\": [\n                    {\n                        \"event-name\": \"frinx-event-types:LINK_UP_DOWN\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create syslog dry-run commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "646c09ba-cf3a-47f3-8945-57f7d63e890a",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"if ( \"cisco_xr5\" === postman.getEnvironmentVariable(\"env_type\") || \"cisco_xr6\" === postman.getEnvironmentVariable(\"env_type\")){",
											"    ",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"dryrun - overall-configuration-status complete\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"    });",
											"    ",
											"    pm.test(\"dryrun - nodeId\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"    });",
											"    ",
											"    pm.test(\"dryrun - not empty configuration\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).not.to.eql(\"\");",
											"    });",
											"    pm.test('dryrun - contains interface Bundle-Ether7029', function () {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).to.include(\"interface Bundle-Ether7029\");",
											"    });",
											"    pm.test('dryrun - contains logging events link-status', function () {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).to.include(\"logging events link-status\");",
											"    });",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af11d9e8-1209-4c48-a272-7f609183da6f",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Here we wait 20 seconds - be patient. The reasons is that this update was not able properly configure device.\")",
											"setTimeout(function(){}, 20000);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/dryrun-manager:dryrun-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"dryrun-manager:dryrun-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "create syslog commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate nodeId\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Configuration and operational datastore is equal \", function() {",
											"  pm.expect(pm.response.json()[\"output\"]).to.not.have.property(\"node-with-diff\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show created syslog",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate interface-id\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"interface-id\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											"pm.test(\"Validate interface-id\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"config\"][\"interface-id\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											"pm.test(\"Validate event-name\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"config\"][\"enabled-logging-for-event\"][0][\"event-name\"]).to.eql(\"frinx-event-types:LINK_UP_DOWN\");",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update syslog => delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface\": [\n        {\n            \"interface-id\": \"{{lag_prefix}}{{lag_inf-id}}\",\n            \"config\": {\n                \"interface-id\": \"{{lag_prefix}}{{lag_inf-id}}\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update dry-run commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c742f7fc-0e16-42c8-9a51-6e15b36a7cf7",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"if ( \"cisco_xr5\" === postman.getEnvironmentVariable(\"env_type\") || \"cisco_xr6\" === postman.getEnvironmentVariable(\"env_type\")){",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"dryrun - overall-configuration-status complete\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"    });",
											"",
											"    pm.test(\"dryrun - nodeId\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"    });",
											"    ",
											"    ",
											"    pm.test(\"dryrun - not empty configuration\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).not.to.eql(\"\");",
											"    });",
											"    pm.test('dryrun - contains interface Bundle-Ether7029', function () {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).to.include(\"interface Bundle-Ether7029\");",
											"    });",
											"    pm.test('dryrun - contains no logging events link-status', function () {",
											"        pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration\"]).to.include(\"no logging events link-status\");",
											"    });",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95649c61-ea2b-4e9d-bcc7-bc119e9e7e70",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Here we wait 20 seconds - be patient. The reasons is that this update was not able properly configure device.\")",
											"setTimeout(function(){}, 20000);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/dryrun-manager:dryrun-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"dryrun-manager:dryrun-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "update syslog commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate nodeId\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Configuration and operational datastore is equal \", function() {",
											"  pm.expect(pm.response.json()[\"output\"]).to.not.have.property(\"node-with-diff\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted syslog",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate interface-id\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"interface-id\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											"pm.test(\"Validate interface-id\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"config\"][\"interface-id\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											"pm.test(\"Validate event-name\", function() {",
											"  pm.expect(pm.response.text()).not.to.include(\"frinx-event-types:LINK_UP_DOWN\");",
											"});",
											"",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete syslog",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete syslog commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate nodeId\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Configuration and operational datastore is equal \", function() {",
											"  pm.expect(pm.response.json()[\"output\"]).to.not.have.property(\"node-with-diff\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted syslog",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "syslog replace-config-with-operational",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\"target-nodes\": {\n\t\t\t\"node\": [\n\t\t\t\t\"{{node_id}}\"\n\t\t\t]\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:replace-config-with-operational"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "SYSLOG CRUD Negative",
					"item": [
						{
							"name": "delete LAG interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d84b77e-ddf4-40f1-a4f0-af2384a2340c",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"output\") && jsonData.output['node-with-diff'] ) {",
											"       console.warn(\"Calculate diff failed,Configuration datastore differs from operational\") ;",
											"    }",
											"    else{",
											"        console.warn(\"NO DIFF\" );",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted SYSLOG",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted LAG interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var mystring = '\"name\":' + '\"Bundle-Ether' + postman.getEnvironmentVariable(\"lag_inf-id\") + '\"';",
											"tests[\"Body does not match string \" + mystring] = !responseBody.has(mystring);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces"
									]
								}
							},
							"response": []
						},
						{
							"name": "create SYSLOG on nonexisting interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"//Cannot configure logging on non-existent interface Bundle-Ether7029",
											"//It should be returned status  4xx - problem on side client",
											"console.warn(\"// FIXME this returns 500 server error instead of returning 4xx for case cannot configure logging on non-existent interface.\")",
											"",
											"// console.log(\"Response: \" + responseBody)",
											"// tests[\"Status code is 4xx\"] = responseCode.code === 4xx;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface\": [\n        {\n            \"interface-id\": \"Bundle-Ether{{lag_inf-id}}\",\n            \"config\": {\n                \"interface-id\": \"Bundle-Ether{{lag_inf-id}}\",\n                \"enabled-logging-for-event\": [\n                    {\n                        \"event-name\": \"frinx-event-types:LINK_UP_DOWN\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted SYSLOG",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete SYSLOG on nonexisting interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"output\") && jsonData.output['node-with-diff'] ) {",
											"       console.warn(\"Calculate diff failed,Configuration datastore differs from operational\") ;",
											"    }",
											"    else{",
											"        console.warn(\"NO DIFF\" );",
											"    }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted SYSLOG",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create SYSLOG on physical interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"//Cannot configure logging on ethernet interface ...",
											"//It should be returned status  4xx - problem on side client",
											"console.warn(\"// FIXME this returns 500 server error instead of returning 4xx for case cannot configure logging on ethernet interface ...\")",
											"",
											"// console.log(\"Response: \" + responseBody)",
											"// tests[\"Status code is 4xx\"] = responseCode.code === 4xx;"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface\": [\n        {\n            \"interface-id\": \"{{snmp_inf_id_physical}}\",\n            \"config\": {\n                \"interface-id\": \"{{snmp_inf_id_physical}}\",\n                \"enabled-logging-for-event\": [\n                    {\n                        \"event-name\": \"frinx-event-types:LINK_UP_DOWN\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/{{snmp_url_inf_id_physical}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"{{snmp_url_inf_id_physical}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "XR5 SYSLOG CRUD",
			"item": [
				{
					"name": "XR5 SYSLOG CRUD Setup",
					"item": [
						{
							"name": "create lag interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface\": [\n        {\n            \"name\": \"{{lag_prefix}}{{lag_inf-id}}\",\n            \"config\": {\n                \"type\": \"iana-if-type:ieee8023adLag\",\n                \"enabled\": {{lag_enabled}},\n                \"mtu\": {{lag_mtu}},\n                \"description\": \"{{lag_description}}\",\n                \"name\": \"{{lag_prefix}}{{lag_inf-id}}\"\n            },\n            \"subinterfaces\": {\n                \"subinterface\": [\n                    {\n                        \"index\": 0,\n                        \"config\": {\n                            \"index\": 0\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								},
								"description": "At first we try to update all values via openconfig - no change in comparing with previous values."
							},
							"response": []
						},
						{
							"name": "create lag interface commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate nodeId\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Configuration and operational datastore is equal \", function() {",
											"  pm.expect(pm.response.json()[\"output\"]).to.not.have.property(\"node-with-diff\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show lag interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate enabled\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-openconfig-interfaces:interface\"][0][\"config\"][\"enabled\"]).to.eql(JSON.parse(postman.getEnvironmentVariable(\"lag_enabled\")));",
											"});",
											"pm.test(\"Validate description\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-openconfig-interfaces:interface\"][0][\"config\"][\"description\"]).to.eql(postman.getEnvironmentVariable(\"lag_description\"));",
											"});",
											"pm.test(\"Validate name\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-openconfig-interfaces:interface\"][0][\"config\"][\"name\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											"pm.test(\"Validate mtu\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-openconfig-interfaces:interface\"][0][\"config\"][\"mtu\"]).to.eql(JSON.parse(postman.getEnvironmentVariable(\"lag_mtu\")));",
											"});",
											"pm.test(\"Validate name\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-openconfig-interfaces:interface\"][0][\"name\"]).to.eql(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR5 SYSLOG CRUD READERS",
					"item": [
						{
							"name": "delete LAG interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5eac358f-2e4b-40f3-adfd-8850e5d3ee51",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n     no interface bundle-ether {{lag_inf-id}}\n     commit\n     end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "create LAG interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2fd8ba8-5602-4711-85d7-f1601373d818",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface bundle-ether {{lag_inf-id}}\n commit\n end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure SYSLOG on LAG",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e791774-8cfa-43c1-ad40-e4c7dd909b45",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\ninterface bundle-ether {{lag_inf-id}}\nlogging events link-status\ncommit\nend\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01a11d5e-6fc3-4976-8252-2c02d6eb8922",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "replace-config-with-operational",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate result\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:replace-config-with-operational"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured SYSLOG",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4da20f59-e396-4ced-90b5-c3c9ab93f2b0",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"//interface-id",
											"pm.test(\"Validate interface-id = \" + pm.environment.get(\"lag_prefix\") + pm.environment.get(\"lag_inf-id\"), function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"interface-id\"]).to.eql(pm.environment.get(\"lag_prefix\") + pm.environment.get(\"lag_inf-id\"));",
											"});",
											"//interface-id",
											"pm.test(\"Validate interface-id = \" + pm.environment.get(\"lag_prefix\") + pm.environment.get(\"lag_inf-id\"), function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"config\"][\"interface-id\"]).to.eql(pm.environment.get(\"lag_prefix\") + pm.environment.get(\"lag_inf-id\"));",
											"});",
											"//event-name",
											"pm.test(\"Validate event-name\", function() {",
											"  pm.expect(pm.response.json()[\"frinx-logging:interface\"][0][\"config\"][\"enabled-logging-for-event\"][0][\"event-name\"]).to.eql(\"frinx-event-types:LINK_UP_DOWN\");",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-logging:logging/interfaces/interface/Bundle-Ether{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-logging:logging",
										"interfaces",
										"interface",
										"Bundle-Ether{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete SYSLOG",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1db7bb98-1c7c-4ef6-8acf-5b4de970261f",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\ninterface bundle-ether {{lag_inf-id}}\nno logging events link-status\ncommit\nend\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete LAG interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b4aa234-7396-4253-9e5b-f9f23e135de7",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n     no interface bundle-ether {{lag_inf-id}}\n     commit\n     end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a02de2a9-6c0c-4b88-bd77-3c304fa1e0d7",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "replace-config-with-operational",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate result\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"result\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:replace-config-with-operational"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconcile",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR5 SYSLOG CRUD Teardown",
					"item": [
						{
							"name": "delete lag interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete lag interface commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"overall-configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate configuration-status\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"pm.test(\"Validate nodeId\", function() {",
											"  pm.expect(pm.response.json()[\"output\"][\"node-config-results\"][\"node-config-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync-from-network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "782b7a74-9a16-4a1b-868b-bc903ba16e93",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate configuration-status\", function() {",
											"  if ( \"node-sync-status-result\" in pm.response.json()[\"output\"][\"node-sync-status-results\"] ){",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0][\"nodeId\"]).to.eql(postman.getEnvironmentVariable(\"node_id\"));",
											"  pm.expect(pm.response.json()[\"output\"][\"node-sync-status-results\"][\"node-sync-status-result\"][0]).to.not.have.own.property(\"error-type\");",
											"",
											"  }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t}\n\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "calculate diff",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a9e125d-e86a-466c-be86-4494a8838303",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"  ",
											"});",
											"",
											"pm.test(\"Configuration and operational datastore is equal \", function() {",
											"  pm.expect(pm.response.json()[\"output\"]).to.not.have.property(\"node-with-diff\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"input\": {\n\t\t\t\t\"target-nodes\": {\n\t\t\t\t\t\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:calculate-diff",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:calculate-diff"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted lag interface from interface list",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\")+\" not included\", function() {",
											"  pm.expect(pm.response.text()).not.to.include(postman.getEnvironmentVariable(\"lag_prefix\")+postman.getEnvironmentVariable(\"lag_inf-id\"))",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted lag interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/{{node_id}}/frinx-uniconfig-topology:configuration/frinx-openconfig-interfaces:interfaces/interface/{{lag_prefix}}{{lag_inf-id}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"{{node_id}}",
										"frinx-uniconfig-topology:configuration",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{lag_prefix}}{{lag_inf-id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}