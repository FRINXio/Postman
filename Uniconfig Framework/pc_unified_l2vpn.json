{
	"info": {
		"_postman_id": "d9a91f83-af6c-4907-8d91-d4d76d696fe8",
		"name": "pc_unified_l2vpn",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tests",
			"description": null,
			"item": [
				{
					"name": "L2VPN connection CRUD",
					"description": null,
					"item": [
						{
							"name": "L2VPN connection CRUD locifc-remote",
							"description": null,
							"item": [
								{
									"name": "create loc to remote",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb64545a-3ef3-4dff-b2f9-b4d57f14ac6d",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface3}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    }\n\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show created locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "064dd6af-5df7-46a0-b53d-8f7d1d253b64",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:LOCAL' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "update sub to remote",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid2}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface3}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    }\n\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show updated locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "605ba347-eff8-4f85-b743-6b563285e874",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:LOCAL' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "create loc to remote 3 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2096ed89-9116-4258-b9a3-ed9a4a8361bd",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid2}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface3}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"2\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"2\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface2}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"2\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show created loc to remote 3 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47fe55b9-e3a1-4022-8b4d-6b97ff2ef0b8",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:REMOTE' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 3 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"        tests[\"Validate endpoint 2 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][2]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 3 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "update loc to remote 3 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface3}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"2\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"2\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface2}}\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"2\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show updated loc to remote 3 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe4e34f1-0122-4348-95cb-1ec5f46029b6",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:REMOTE' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 3 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"        tests[\"Validate endpoint 2 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][2]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface3\");",
													"        tests[\"Validate endpoint 3 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful DELETE request\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "L2VPN connection CRUD locsub-remote",
							"description": null,
							"item": [
								{
									"name": "create locsub to remote 2 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00b143c5-8f39-4d62-aa7d-a0c280f75d6d",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface2}}\",\n                                             \"subinterface\": {{vpls_show_sub_interface_index}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    }\n\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show created locsub to remote 2 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79154b01-9ba8-487e-90d0-5355981eb442",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:LOCAL' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": 44,\n          \"config\" : {\n            \"index\": 44,\n            \"enabled\": \"true\"\n          },\n          \"openconfig-vlan:vlan\" : {\n            \"config\" : {\n              \"vlan-id\" : 44\n            }\n          }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "update locsub to remote 2 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful PUT request\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network-instance\": [\n        {\n            \"name\": \"{{vpls_ni_name}}\",\n            \"config\": {\n                \"name\": \"{{vpls_ni_name}}\",\n                \"type\": \"frinx-openconfig-network-instance-types:L2VSI\"\n            },\n            \"protocols\": {\n            \t\"protocol\": [  \n\t\t\t\t   {  \n\t\t\t\t      \"name\":\"default\",\n\t\t\t\t      \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t      \"config\":{  \n\t\t\t\t         \"name\":\"default\",\n\t\t\t\t         \"identifier\":\"frinx-openconfig-policy-types:BGP\",\n\t\t\t\t         \"enabled\": true\n\t\t\t\t      },\n\t\t\t\t      \"bgp\":{  \n\t\t\t\t         \"global\":{  \n\t\t\t\t            \"config\":{  \n\t\t\t\t               \"as\":\"65002\"\n\t\t\t\t            }\n\t\t\t\t         }\n\t\t\t\t      }\n\t\t\t\t   }\n\t\t\t\t]\n            },\n            \"connection-points\": {\n                \"connection-point\": [\n                    {\n                        \"connection-point-id\": \"remote\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:REMOTE\",\n                                        \"endpoint-id\": \"default\"\n                                    },\n                                    \"remote\": {\n                                        \"config\": {\n                                            \"virtual-circuit-identifier\": {{vpls_vccid2}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"remote\"\n                        }\n                    },\n                    {\n                        \"connection-point-id\": \"1\",\n                        \"endpoints\": {\n                            \"endpoint\": [\n                                {\n                                    \"endpoint-id\": \"default\",\n                                    \"config\": {\n                                        \"precedence\": 0,\n                                        \"type\": \"frinx-openconfig-network-instance-types:LOCAL\",\n                                        \"endpoint-id\": \"1\"\n                                    },\n                                    \"local\": {\n                                        \"config\": {\n                                            \"interface\": \"{{vpls_show_interface2}}\",\n                                             \"subinterface\": {{vpls_show_sub_interface_index}}\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"config\": {\n                            \"connection-point-id\": \"1\"\n                        }\n                    }\n\n                ]\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show updated locsub to remote 2 points",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d06c13a-7f69-4084-b410-1d82a68dda26",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful GET request\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"    if ( jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['config']['type'] === 'frinx-openconfig-network-instance-types:LOCAL' ) {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"    } else {",
													"        tests[\"Validate endpoint 1 interface\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][1]['endpoints']['endpoint'][0]['local']['config']['interface'] === postman.getEnvironmentVariable(\"vpls_show_interface2\");",
													"        tests[\"Validate endpoint 2 remote\"] = jsonData['network-instance'][0]['connection-points']['connection-point'][0]['endpoints']['endpoint'][0]['remote']['config']['virtual-circuit-identifier'] == postman.getEnvironmentVariable(\"vpls_vccid2\");",
													"    }"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"pm.test(\"Successful DELETE request\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "XR L2VPN connection CRUD",
			"description": null,
			"item": [
				{
					"name": "XR L2VPN connection CRUD Setup",
					"description": null,
					"item": [
						{
							"name": "delete previous subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"     pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": 44,\n          \"config\" : {\n            \"index\": 44,\n            \"enabled\": \"true\"\n          },\n          \"openconfig-vlan:vlan\" : {\n            \"config\" : {\n              \"vlan-id\" : 44\n            }\n          }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete previous l2vpn",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-network-instance:network-instances",
										"network-instance",
										"{{vpls_ni_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted l2vpn",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-network-instance:network-instances",
										"network-instance",
										"{{vpls_ni_name}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR L2VPN connection CRUD Teardown",
					"description": null,
					"item": [
						{
							"name": "delete subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR L2VPN connection READERS",
					"description": null,
					"item": [
						{
							"name": "locifc-remote",
							"description": null,
							"item": [
								{
									"name": "configure locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nl2vpn\nbridge group frinx\nbridge-domain {{vpls_ni_name}}\nvfi {{vpls_ni_name}}\nvpn-id {{vpls_vccid}}\nautodiscovery bgp\nrd auto\nroute-target {{bgp_peer-as}}:{{vpls_vccid}}\nsignaling-protocol bgp\nve-id {{vpls_endpoint_id}}\nexit\nexit\nexit\nexit\nexit\nexit\ninterface {{vpls_show_interface3}}\nl2transport\nexit\nexit\nl2vpn\nbridge group frinx\nbridge-domain {{vpls_ni_name}}\ninterface {{vpls_show_interface3}}\ncommit\nend\"\n  }\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show configured locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a571d4d-acbe-4e51-bac6-94605742b808",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"//config name",
													"pm.test(\"Validate config name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//name",
													"pm.test(\"Validate name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//connection-point-id",
													"pm.test(\"Validate connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//virtual-circuit-identifier",
													"pm.test(\"Validate virtual-circuit-identifier = \" + pm.environment.get(\"vpls_vccid\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"remote\"][\"config\"][\"virtual-circuit-identifier\"]).to.eql(JSON.parse(pm.environment.get(\"vpls_vccid\")));",
													"});",
													"//config endpoint-id",
													"pm.test(\"Validate config endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//config connection-point-id",
													"pm.test(\"Validate config connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"config\"][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//connection-point-id 2",
													"pm.test(\"Validate connection-point-id 2 = \" + pm.environment.get(\"l2p2p_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"connection-point-id\"]).to.eql(pm.environment.get(\"l2p2p_show_interface3\"));",
													"});",
													"//endpoint-id 2",
													"pm.test(\"Validate endpoint-id 2 = \" + pm.environment.get(\"l2p2p_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(pm.environment.get(\"l2p2p_show_interface3\"));",
													"});",
													"//config interface",
													"pm.test(\"Validate config interface = \" + pm.environment.get(\"l2p2p_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"local\"][\"config\"][\"interface\"]).to.eql(pm.environment.get(\"l2p2p_show_interface3\"));",
													"});",
													"//config endpoint-id 2",
													"pm.test(\"Validate config endpoint-id 2 = \" + pm.environment.get(\"l2p2p_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(pm.environment.get(\"l2p2p_show_interface3\"));",
													"});",
													"//config connection-point-id 2",
													"pm.test(\"Validate config connection-point-id 2 = \" + pm.environment.get(\"l2p2p_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"config\"][\"connection-point-id\"]).to.eql(pm.environment.get(\"l2p2p_show_interface3\"));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\ninterface {{vpls_show_interface3}}\nno l2transport\nexit\nno l2vpn\ncommit\nend\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody);",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "locsub-remote",
							"description": null,
							"item": [
								{
									"name": "delete previous subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "25db00c5-3363-414c-b65a-789dacf8ff50",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n     no interface {{vpls_show_interface2}}.{{vpls_show_sub_interface_index}}\n     commit\n     end\"\n  }\n}\n\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show nonexisting subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody);",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": 44,\n          \"config\" : {\n            \"index\": 44,\n            \"enabled\": \"true\"\n          },\n          \"openconfig-vlan:vlan\" : {\n            \"config\" : {\n              \"vlan-id\" : 44\n            }\n          }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{vpls_show_interface2url}}",
												"subinterfaces",
												"subinterface",
												"{{vpls_show_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "configure locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5ca6e4ec-de43-45e9-b9a9-d5836b3c909c",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nl2vpn\nbridge group frinx\nbridge-domain {{vpls_ni_name}}\nvfi {{vpls_ni_name}}\nvpn-id {{vpls_vccid}}\nautodiscovery bgp\nrd auto\nroute-target {{bgp_peer-as}}:{{vpls_vccid}}\nsignaling-protocol bgp\nve-id {{vpls_endpoint_id}}\nexit\nexit\nexit\nexit\nexit\nexit\ninterface {{vpls_show_interface2}}.{{vpls_show_sub_interface_index}} l2transport\nencapsulation dot1q {{vpls_show_sub_interface_index}}\nrewrite ingress tag pop 1 symmetric\nexit\nl2vpn\nbridge group frinx\nbridge-domain {{vpls_ni_name}}\ninterface {{vpls_show_interface2}}.{{vpls_show_sub_interface_index}}\ncommit\nend\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show configured locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "79e2108a-3723-4970-9ebe-a227d0ef4a93",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"//config name",
													"pm.test(\"Validate config name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//name",
													"pm.test(\"Validate name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//connection-point-id",
													"pm.test(\"Validate connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//virtual-circuit-identifier",
													"pm.test(\"Validate virtual-circuit-identifier = \" + pm.environment.get(\"vpls_vccid\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"remote\"][\"config\"][\"virtual-circuit-identifier\"]).to.eql(JSON.parse(pm.environment.get(\"vpls_vccid\")));",
													"});",
													"//config endpoint-id",
													"pm.test(\"Validate config endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//config connection-point-id",
													"pm.test(\"Validate config connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"config\"][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//connection-point-id 2",
													"pm.test(\"Validate connection-point-id 2 = \" + pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"connection-point-id\"]).to.eql(pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"));",
													"});",
													"//endpoint-id 2",
													"pm.test(\"Validate endpoint-id 2 = \" + pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"));",
													"});",
													"//interface",
													"pm.test(\"Validate interface = \" + pm.environment.get(\"vpls_show_interface2\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"local\"][\"config\"][\"interface\"]).to.eql(pm.environment.get(\"vpls_show_interface2\"));",
													"});",
													"//config endpoint-id 2",
													"pm.test(\"Validate config endpoint-id 2 = \" + pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"));",
													"});",
													"//config connection-point-id 2",
													"pm.test(\"Validate config connection-point-id 2 = \" + pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"config\"][\"connection-point-id\"]).to.eql(pm.environment.get(\"vpls_show_interface2\") +\".\" + pm.environment.get(\"vpls_show_sub_interface_index\"));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "20bc9d6f-ae1e-4ead-af1c-07d4d1dfc140",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nno interface {{vpls_show_interface2}}.{{vpls_show_sub_interface_index}} l2transport \nno l2vpn\ncommit\nend\"\n  }\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37bc86cf-fff6-4920-bea3-0d7cde64745c",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody);",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Classic L2VPN connection CRUD",
			"description": null,
			"item": [
				{
					"name": "Classic L2VPN connection CRUD Setup",
					"description": null,
					"item": [
						{
							"name": "delete previous subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f640700e-9712-4517-9a32-cf45923d3417",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": 44,\n          \"config\" : {\n            \"index\": 44,\n            \"enabled\": \"true\"\n          },\n          \"openconfig-vlan:vlan\" : {\n            \"config\" : {\n              \"vlan-id\" : 44\n            }\n          }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete previous l2vpn",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3ef7b90-7b77-469d-8f19-98f9e89012d2",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-network-instance:network-instances",
										"network-instance",
										"{{vpls_ni_name}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted l2vpn",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "841ebcd1-19f1-4633-88c7-eec6b68a3c73",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\t{\n\t    \"openconfig-network-instance:network-instance\": [\n\t      {\n\t        \"name\": \"conn1233\",\n\t        \"config\": {\n\t          \"name\": \"conn1233\",\n\t          \"type\": \"openconfig-network-instance-types:L2P2P\"\n\t        },\n\t        \"connection-points\": {\n\t          \"connection-point\": [\n\t            {\n\t              \"connection-point-id\": \"1\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"1\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:LOCAL\"\n\t                    },\n\t                    \"local\": {\n\t                      \"config\": {\n\t                        \"interface\": \"GigabitEthernet2/0\"\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            },\n\t            {\n\t              \"connection-point-id\": \"2\",\n\t              \"config\": {\n\t                \"connection-point-id\": \"2\"\n\t              },\n\t              \"endpoints\": {\n\t                \"endpoint\": [\n\t                  {\n\t                    \"endpoint-id\": \"default\",\n\t                    \"config\": {\n\t                      \"endpoint-id\": \"default\",\n\t                      \"precedence\": 0,\n\t                      \"type\": \"openconfig-network-instance-types:REMOTE\"\n\t                    },\n\t                    \"remote\": {\n\t                      \"config\": {\n\t                        \"remote-system\": \"1.1.1.1\",\n\t                        \"virtual-circuit-identifier\": 123\n\t                      }\n\t                    }\n\t                  }\n\t                ]\n\t              }\n\t            }\n\t          ]\n\t        }\n\t      }\n\t    ]\n\t  \n\t}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-network-instance:network-instances",
										"network-instance",
										"{{vpls_ni_name}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Classic L2VPN connection CRUD Teardown",
					"description": null,
					"item": [
						{
							"name": "delete subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b516029-0afe-49a1-8852-ed6ded6c5db4",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{vpls_show_interface2url}}/subinterfaces/subinterface/{{vpls_show_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{vpls_show_interface2url}}",
										"subinterfaces",
										"subinterface",
										"{{vpls_show_sub_interface_index}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Classic L2VPN connection READERS",
					"description": null,
					"item": [
						{
							"name": "locifc-remote",
							"description": null,
							"item": [
								{
									"name": "configure locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "99b25741-1b33-4674-b359-905432cf72a4",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nbridge-domain {{vpls_ni_name}}\nexit\nl2 vfi {{vpls_ni_name}} autodiscovery\nvpn id {{vpls_vccid}}\nbridge-domain {{vpls_ni_name}}\nexit\nbridge-domain {{vpls_ni_name}}\nexit\ninterface {{vpls_show_interface3}}\nservice instance {{vpls_endpoint_id}} ethernet\nencapsulation untagged\nbridge-domain {{vpls_ni_name}}\nexit\nexit\nexit\"\n  }\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show configured locifc l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70fbb221-acce-4895-a94a-a727c672a645",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"//config name",
													"pm.test(\"Validate config name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//name",
													"pm.test(\"Validate name = \" + pm.environment.get(\"vpls_ni_name\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"name\"]).to.eql(pm.environment.get(\"vpls_ni_name\"));",
													"});",
													"//connection-point-id",
													"pm.test(\"Validate connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//virtual-circuit-identifier",
													"pm.test(\"Validate virtual-circuit-identifier = \" + pm.environment.get(\"vpls_vccid\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"remote\"][\"config\"][\"virtual-circuit-identifier\"]).to.eql(JSON.parse(pm.environment.get(\"vpls_vccid\")));",
													"});",
													"//config endpoint-id",
													"pm.test(\"Validate config endpoint-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//config connection-point-id",
													"pm.test(\"Validate config connection-point-id = \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"config\"][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//connection-point-id 2",
													"pm.test(\"Validate connection-point-id 2 = 1\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"connection-point-id\"]).to.eql(\"1\");",
													"});",
													"//endpoint-id 2",
													"pm.test(\"Validate endpoint-id 2 = default \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//config interface",
													"pm.test(\"Validate config interface = \" + pm.environment.get(\"vpls_show_interface3\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"local\"][\"config\"][\"interface\"]).to.eql(pm.environment.get(\"vpls_show_interface3\"));",
													"});",
													"//config endpoint-id 2",
													"pm.test(\"Validate config endpoint-id 2 = default\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//config connection-point-id 2",
													"pm.test(\"Validate config connection-point-id 2 = 1\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"config\"][\"connection-point-id\"]).to.eql(\"1\");",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d6393a8d-2de3-45fa-b316-3560374951ef",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\ninterface {{vpls_show_interface3}}\nno service instance {{vpls_endpoint_id}} ethernet\nexit\nno l2 vfi {{vpls_ni_name}} autodiscovery\nno bridge-domain {{vpls_ni_name}}\nexit\"\n  }\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cfedae0a-4ece-4223-947d-589b8f1540ca",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody);",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "locsub-remote",
							"description": null,
							"item": [
								{
									"name": "delete previous subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5603fb5f-7628-442f-9dcc-840c6634eb59",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nno interface {{vpls_show_interface2}}.{{vpls_show_sub_interface_index}}\nexit\"\n  }\n}\n\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "configure locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "996982ec-58aa-414f-8062-5bbd2b995058",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\nbridge-domain {{vpls_ni_name}}\nexit\nl2 vfi {{vpls_ni_name}} autodiscovery\nvpn id {{vpls_vccid}}\nbridge-domain {{vpls_ni_name}}\nexit\nbridge-domain {{vpls_ni_name}}\nexit\ninterface {{vpls_show_interface2}}\nservice instance {{vpls_endpoint_id}} ethernet\nencapsulation dot1q {{vpls_show_sub_interface_index}}\nrewrite ingress tag pop 1 symmetric\nbridge-domain {{vpls_ni_name}}\nexit\nexit\nexit\"\n  }\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show configured locsub l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c536eed1-72b8-4e74-a06b-e3157268751f",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"//type",
													"pm.test(\"Validate type = frinx-openconfig-network-instance-types:L2VSI \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"config\"][\"type\"]).to.eql(\"frinx-openconfig-network-instance-types:L2VSI\");",
													"});",
													"//connection-point-id",
													"pm.test(\"Validate connection-point-id = remote\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"connection-point-id\"]).to.eql(\"remote\");",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = default\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//virtual-circuit-identifier",
													"pm.test(\"Validate virtual-circuit-identifier = \" + pm.environment.get(\"vpls_vccid\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"remote\"][\"state\"][\"virtual-circuit-identifier\"]).to.eql(JSON.parse(pm.environment.get(\"vpls_vccid\")));",
													"});",
													"//virtual-circuit-identifier",
													"pm.test(\"Validate virtual-circuit-identifier = \" + pm.environment.get(\"vpls_vccid\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"remote\"][\"config\"][\"virtual-circuit-identifier\"]).to.eql(JSON.parse(pm.environment.get(\"vpls_vccid\")));",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = default\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"state\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//active",
													"pm.test(\"Validate active =true \", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"state\"][\"active\"]).to.eql(true);",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = default\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][0][\"endpoints\"][\"endpoint\"][0][\"config\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//connection-point-id",
													"pm.test(\"Validate connection-point-id = 1\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"connection-point-id\"]).to.eql(\"1\");",
													"});",
													"//interface",
													"pm.test(\"Validate interface = \" + pm.environment.get(\"vpls_show_interface2\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"local\"][\"state\"][\"interface\"]).to.eql(pm.environment.get(\"vpls_show_interface2\"));",
													"});",
													"//interface",
													"pm.test(\"Validate interface = \" + pm.environment.get(\"vpls_show_interface2\"), function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"local\"][\"config\"][\"interface\"]).to.eql(pm.environment.get(\"vpls_show_interface2\"));",
													"});",
													"//endpoint-id",
													"pm.test(\"Validate endpoint-id = default\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"state\"][\"endpoint-id\"]).to.eql(\"default\");",
													"});",
													"//active",
													"pm.test(\"Validate active = true\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"state\"][\"active\"]).to.eql(true);",
													"});",
													"//type",
													"pm.test(\"Validate type = frinx-openconfig-network-instance-types:LOCAL\", function() {",
													"  pm.expect(pm.response.json()[\"network-instance\"][0][\"connection-points\"][\"connection-point\"][1][\"endpoints\"][\"endpoint\"][0][\"state\"][\"type\"]).to.eql(\"frinx-openconfig-network-instance-types:LOCAL\");",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "425e32ba-eacc-4256-8f40-19364d559032",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\ninterface {{vpls_show_interface2}}\nno service instance {{vpls_endpoint_id}} ethernet\nexit\nno l2 vfi {{vpls_ni_name}} autodiscovery\nno bridge-domain {{vpls_ni_name}}\nexit\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operations",
												"network-topology:network-topology",
												"topology",
												"{{topology_id_cli}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"cli-unit-generic:execute-and-read"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted l2vpn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3aac3af1-6add-41cc-8d3c-c81713e8c5d4",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody);",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-network-instance:network-instances/network-instance/{{vpls_ni_name}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"operational",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-network-instance:network-instances",
												"network-instance",
												"{{vpls_ni_name}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}