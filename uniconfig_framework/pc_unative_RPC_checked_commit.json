{
	"info": {
		"_postman_id": "da4466e1-1597-426f-bf81-5f8163a0f173",
		"name": "pc_unative_RPC_checked_commit",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "XR6 Checked commit",
			"item": [
				{
					"name": "XR6 Checked commit Setup",
					"item": [
						{
							"name": "mount IOS XR netconf R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "513ec988-97a1-4b0b-b2cf-52a531c83d23",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "check status connected R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd82071c-97fa-472b-94e0-f890abd95c26",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"node\") && jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\") {",
											"    tests[\"Is connected\"] = jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\";",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Not connected yet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check status connected R1');",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c3c01131-3435-4bbd-acaf-4d6e1570507d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "check uniconfig available R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15db93b4-856e-4fd6-b702-0b777cd31b20",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (pm.response.code === 200) {",
											"    tests[\"Is connected\"] = true;",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Uniconfig for node not availableyet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check uniconfig available R1');",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "92582d2e-75bd-4153-aa21-d14fd4ba8283",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "mount IOS XR netconf R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e073294d-aa23-4b5f-aef4-c0a259817a75",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						},
						{
							"name": "check status connected R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19657c75-5f77-4462-a1cf-f8f8429d89b4",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"node\") && jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\") {",
											"    tests[\"Is connected\"] = jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\";",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Not connected yet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check status connected R2');",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b33146f9-89e2-44d8-8b55-32e0abf3e217",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						},
						{
							"name": "check uniconfig available R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6249b5d-067f-4738-a4f1-bab8b82fdee1",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (pm.response.code === 200) {",
											"    tests[\"Is connected\"] = true;",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Uniconfig for node not availableyet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check uniconfig available R2');",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d51800f5-eb78-476c-a5c7-e94a5a48bee8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete loopback from R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa12d165-dab0-4ae7-b3a2-72a5ad8392eb",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404,200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete loopback from R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02e73ee3-faef-4929-a90d-2331a6d0dccd",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404,200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10990f44-77f6-4d58-971b-ae72f82037ca",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f33aebab-d300-4632-8d44-31b1bf92f316",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "sync from network",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8053affa-ee6f-4fc2-a511-66ade6df75cd",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                     \"node\": [\"R1\",\"R2\"]\n\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:sync-from-network",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:sync-from-network"
									]
								}
							},
							"response": []
						},
						{
							"name": "replace config with operational",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "417d4eb9-d99e-4afb-a037-80c73aa4e61f",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"    pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"    });",
											"",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"    pm.test(\"Number of nodes in output should be 2\", function() {",
											"        pm.expect(result.length).to.eql(2);",
											"    })",
											"    pm.test(\"Status of all output nodes should be 'complete'\", function() {",
											"        result.forEach(function(nodeResult, index) {",
											"            pm.expect(nodeResult[\"node-id\"]).to.be.oneOf([\"R1\", \"R2\"]);",
											"            pm.expect(nodeResult[\"status\"]).to.eq(\"complete\")",
											"        });",
											"    })"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                     \"node\": [\"R1\",\"R2\"]\n\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:replace-config-with-operational",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:replace-config-with-operational"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR6 Checked commit Teardown",
					"item": [
						{
							"name": "delete loopback from R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f2c8ae6-d475-4805-aa7c-0d1ae18974de",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404,200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete loopback from R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92c9a88e-ff19-4b28-a323-42daf783a928",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404,200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aba67d0d-7bff-46f0-921c-2468fe249b4f",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60005fb0-ef70-4173-adbf-31a3082a1be9",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "unmount R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d92b43a-1ed2-44c9-8b6b-aca9092119a6",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "check unmounted R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c7cef262-cc1d-4c07-b863-c240716b9e64",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"No data expected\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f37b7409-2850-48f3-a310-7947284404b0",
										"exec": [
											"setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "unmount R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1caf908d-20bc-48b5-8cfa-260d3bc80361",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						},
						{
							"name": "check unmounted R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea0b4600-53c8-4344-af3a-65cfef69c53a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"No data expected\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a130d3b-226c-486d-a513-3af25c2759ec",
										"exec": [
											"setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Tests",
			"item": [
				{
					"name": "Checked commit one-router",
					"item": [
						{
							"name": "configure loopback on R1 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0cda2f20-8c42-4111-87f1-b44b8591e5c7",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R2 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6c29260-6210-4a47-b969-a95539f1642c",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ab18b01-7364-4ccd-a6e0-be4bd64cb9ad",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"        pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"    });",
											"",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"pm.test(\"Commited node R1 status: \" + pm.response.json()[\"output\"][\"configuration-status\"], function () {",
											"      for(var i = 0; i < result.length; i++){",
											"         if( result[i][\"node-id\"] = \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"",
											"         }",
											"      }",
											"    });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                    \"node\": [\"R1\"]\n                }\n            }\n }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing interface on oper R1 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56ba46c0-eab6-42e4-ba6f-f011e8d96218",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on oper R2 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cac7c935-c9e6-4af4-a2c9-5f336bbcaeb4",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface configuration on R1 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bec66656-8089-41b5-a1ae-1479cee21b15",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show no interface configuration on R2 one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9b7ad3c-b774-4003-9118-eb7cf40801e6",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit all-routers",
					"item": [
						{
							"name": "configure loopback on R1 all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7259e8be-124f-4ac3-989e-40560f2aff1e",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R2 all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f59d5b6-f345-4e6a-9ba9-0ae593a1d8d2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86e8556b-f579-4c4d-a604-1c52360b4824",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											" pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"    var results = [];",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"        console.log(\"result: \" + result[0][\"node-id\"] )",
											"        console.log(\"result: \" + result[1] )",
											"    for(var i = 0; i < result.length; i++){",
											"        results[i] = result[i][\"node-id\"];",
											"        console.log(\"array: \" + results[i])",
											"",
											"    }",
											"",
											"pm.test(\"Commited node R1 status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"            break;",
											"        }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R2 status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R2\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                     \"node\": [\"R1\",\"R2\"]\n\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing interface on oper R1 all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c373785-1884-4f49-b7f4-bb154311bb37",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing interface on R2 oper all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9fcb1dec-7be1-4503-ac47-8b21e9a62779",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface configuration on R1 all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd132b32-7524-4344-ade8-22c7c995da26",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface configuration on R2 all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a0aa90e4-686e-4e41-9290-57943d9a0409",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit no-change all-routers",
					"item": [
						{
							"name": "mount IOS XR netconf R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84496062-bb67-4956-9021-0e1787d165a5",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "check status connected R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7269b125-a550-4453-a60d-9268c8bb9129",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"node\") && jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\") {",
											"    tests[\"Is connected\"] = jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\";",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Not connected yet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check status connected R1');",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b02341df-cda2-472e-843e-a34796ee3fcb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "check uniconfig available R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e93bbbec-297f-4040-a933-6f9479b013a5",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (pm.response.code === 200) {",
											"    tests[\"Is connected\"] = true;",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Uniconfig for node not availableyet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check uniconfig available R1');",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ea42c618-1f2b-4e52-ad40-e9accbcdf51f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "mount IOS XR netconf R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57aff962-5e24-4635-b03a-bb824ef0c2c3",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R2\",\n      \"netconf-node-topology:host\": \"{{xr2_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"{{password}}\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						},
						{
							"name": "check status connected R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6b04b2d-4173-4b4d-b627-67d0d069fe95",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (responseBody.has(\"node\") && jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\") {",
											"    tests[\"Is connected\"] = jsonData.node[0]['netconf-node-topology:connection-status'] === \"connected\";",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Not connected yet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check status connected R2');",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95420030-b33e-4506-9ba5-e153694e5249",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						},
						{
							"name": "check uniconfig available R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "439b6fa1-2972-41b1-bd17-28582580e6f0",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"// attempts counter",
											"var attempt = JSON.parse(postman.getEnvironmentVariable(\"attempt\"));",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"if (pm.response.code === 200) {",
											"    tests[\"Is connected\"] = true;",
											"    // Reset attempt counter",
											"    postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"} else {",
											"    // If too many attempts, abort",
											"    if (attempt > JSON.parse(postman.getEnvironmentVariable(\"connect_attempts\"))) {",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(1));",
											"        console.log(\"Not connected yet ! Too many attempts !\")",
											"        // Reset attempt counter",
											"        tests[\"Unable to connect\"] = false",
											"    } else {",
											"        // Schedule next check attempt",
											"        console.log(\"Uniconfig for node not availableyet ! Waiting, attempt : \" + attempt)",
											"        setTimeout(function(){}, JSON.parse(postman.getEnvironmentVariable(\"connect_attempt_delay\")));",
											"        postman.setEnvironmentVariable(\"attempt\", JSON.stringify(attempt + 1));",
											"        postman.setNextRequest('check uniconfig available R2');",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "54cd0641-5734-4c91-9565-4f3a6f295124",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "show history R1 before commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f9fe1ff-4e8a-480d-95f4-101e46f9c1b8",
										"exec": [
											"//console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// here count the commit number and store in a variable",
											"// this variable will be used to after to compere with the number of commits after the commit",
											"pm.environment.set(\"R1_commit_number_before\", pm.response.json()[\"cfg-hist-gl\"][\"record-type\"][1][\"record\"].length);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9d38e7d9-3040-480d-b4e9-0ced5eff7a8d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/R1/yang-ext:mount/Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl"
									]
								}
							},
							"response": []
						},
						{
							"name": "show history R2 before commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb32f5e2-d63d-4e7a-9efa-d93fd7901f99",
										"exec": [
											"//console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"// here count the commit number and store in a variable",
											"// this variable will be used to after to compere with the number of commits after the commit",
											"pm.environment.set(\"R2_commit_number_before\", pm.response.json()[\"cfg-hist-gl\"][\"record-type\"][1][\"record\"].length);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e5be99a7-9f7f-4273-bdee-019932235100",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/R2/yang-ext:mount/Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit no change all routers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cace1dcf-82e0-4884-807b-290d33eab261",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											" pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"complete\");",
											"});",
											"",
											"    var results = [];",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"        console.log(\"result: \" + result[0][\"node-id\"] )",
											"        console.log(\"result: \" + result[1] )",
											"    for(var i = 0; i < result.length; i++){",
											"        results[i] = result[i][\"node-id\"];",
											"        console.log(\"array: \" + results[i])",
											"",
											"    }",
											"",
											"pm.test(\"Commited node R1 status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"            break;",
											"        }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R2 status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R2\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                     \"node\": [\"R1\",\"R2\"]\n\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "show history R1 after commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3e10305-8ae8-4ebc-b941-4c65b49c1cd9",
										"exec": [
											"//console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"tests[\"Nothing committed\"] = pm.response.json()[\"cfg-hist-gl\"][\"record-type\"][1][\"record\"].length === pm.environment.get(\"R1_commit_number_before\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0f513d7e-14da-4089-a7bb-c04e17383799",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/R1/yang-ext:mount/Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl"
									]
								}
							},
							"response": []
						},
						{
							"name": "show history R2 after commit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d8958d8-0f29-4f38-9b85-435b0a1749b4",
										"exec": [
											"//console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"tests[\"Nothing committed\"] = pm.response.json()[\"cfg-hist-gl\"][\"record-type\"][1][\"record\"].length === pm.environment.get(\"R2_commit_number_before\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "04aa78fd-530b-468f-ac96-c6ce780a9d7e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/topology-netconf/node/R2/yang-ext:mount/Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"topology-netconf",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-config-cfgmgr-exec-oper:cfg-hist-gl"
									]
								}
							},
							"response": []
						},
						{
							"name": "unmount R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12481e76-0b96-4fa3-97ac-977e09a9c918",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "unmount R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86e6f9cd-a5cf-41d1-9018-54d745229c1d",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit bad-input",
					"item": [
						{
							"name": "configure loopback on R1 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d539d63c-c098-47e8-93a1-3e0db61650a0",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R2 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f90f3e06-688e-464d-9457-ac279b122461",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit  bad input R1 and R3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f41d8848-5346-4d88-bb79-cf1ba2656731",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"    pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"fail\");",
											"    });",
											"",
											"    var results = [];",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"        for(var i = 0; i < result.length; i++){",
											"             results[i] = result[i][\"node-id\"];",
											"        }",
											"    ",
											"    ",
											"    pm.test(\"Commited node R1 status: fail \", function () {",
											"        for(var i = 0; i < result.length; i++){",
											"            if( result[i][\"node-id\"] == \"R1\"){",
											"                pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"                pm.expect(result[i][\"configuration-status\"]).to.eql(\"fail\");",
											"                pm.expect(result[i][\"error-type\"]).to.eql(\"processing-error\");",
											"                break;",
											"            }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"        }",
											"    });",
											"",
											"",
											"pm.test(\"Commited node R3 status: fail \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R3\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R3\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"fail\");",
											"            pm.expect(result[i][\"error-type\"]).to.eql(\"no-connection\");",
											"            pm.expect(result[i][\"error-message\"]).to.contain(\"Node has not been mounted yet.\");",
											"            break;",
											"        }",
											"            var found = results.includes('R3');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t\"node\": [\"R1\", \"R3\"]\n                    }\n            }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on oper R1 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8da703d-9bbb-4394-b666-e2b3aecd6f7a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on oper R2 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "913ad81e-38a8-4257-890d-0963bd86b010",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show no interface configuration on R1 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8f79e11-4392-4a61-b404-1104515192ce",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show no interface configuration on R2 bad input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb79f6b6-d297-41e9-a75b-5a1e677ba571",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit bad-config-one-router",
					"item": [
						{
							"name": "configure loopback on R1 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdece6d1-c575-4e2b-9aa7-dd18c33c580b",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \n            \"mtus\": {\n                    \"mtu\": [{\n                           \"owner\": \"loopback\",\n                           \"mtu\": 1400\n                          }]\n            },\n\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure interface on R2 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49a0efb2-4769-4018-bafe-e234a440e948",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d616e70-a7d2-47b0-8b93-418e678c821e",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"fail\");",
											"});",
											"",
											"var results = [];",
											"var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"        console.log(\"result: \" + result[0][\"node-id\"] )",
											"        console.log(\"result: \" + result[1] )",
											"    for(var i = 0; i < result.length; i++){",
											"        results[i] = result[i][\"node-id\"];",
											"        console.log(\"array: \" + results[i])",
											"",
											"    }",
											"",
											"pm.test(\"Commited node R1 status: fail \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"fail\");",
											"            pm.expect(result[i][\"error-type\"]).to.eql(\"processing-error\");",
											"            pm.expect(result[i][\"rollback-status\"]).to.eql(\"complete\");",
											"            pm.expect(result[i][\"error-message\"]).to.contain(\"This operation is not supported: The interface owner has not registered support for MTU\");",
											"            break;",
											"        }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R2 status:complete \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R2\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"            pm.expect(result[i][\"rollback-status\"]).to.eql(\"complete\");",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t\"node\": [\"R1\", \"R2\"]\n\n                    }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on R1 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f81f387f-1f24-4595-b7dd-ce77067b7900",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on R2 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "218b9ef9-937a-4c3c-90f5-ddd66bd8175f",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show  no interface configuration on R1 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c48a40f2-6697-49b8-807f-81a20f56b15c",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show  no interface configuration on R2 bad config one router",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4971290-42aa-45d2-bff6-5338117b6b69",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit no-connection-one-router",
					"item": [
						{
							"name": "mount IOS XR netconf R1 wrong password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2f4cd24-9033-42ff-80e9-012e5b9edc5b",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"node\": [\n    {\n      \"node-id\": \"R1\",\n      \"netconf-node-topology:host\": \"{{xr_ip}}\",\n      \"netconf-node-topology:port\": {{netconf_port}},\n      \"netconf-node-topology:keepalive-delay\": 0,\n      \"netconf-node-topology:tcp-only\": false,\n      \"netconf-node-topology:username\": \"{{username}}\",\n      \"netconf-node-topology:password\": \"bla\",\n      \"uniconfig-config:uniconfig-native-enabled\": true,\n      \"uniconfig-config:blacklist\": {\n          \"uniconfig-config:path\": [\"openconfig-interfaces:interfaces\", \"ietf-interfaces:interfaces\", \"openconfig-vlan:vlans\", \"openconfig-routing-policy:routing-policy\"]\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R1 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80f3865a-0db6-4cb1-ae38-40c4ae70e37a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R2 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "920255e6-c4f6-4f06-8f70-98d0b481e6d7",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45581aaa-6a96-4a2c-a9c1-181d471cb422",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"       pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"fail\");",
											"});",
											"",
											"",
											"var results = [];",
											"var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"    for(var i = 0; i < result.length; i++){",
											"        results[i] = result[i][\"node-id\"];",
											"    }",
											"",
											"    ",
											"pm.test(\"Commited node R1 status: FAIL \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"fail\");",
											"            pm.expect(result[i][\"error-type\"]).to.eql(\"no-connection\");",
											"            pm.expect(result[i][\"error-message\"]).to.contain(\"Unified Mountpoint not found.\");",
											"            break;",
											"        }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R2 status: FAIL\" , function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R2\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(\"fail\");",
											"            pm.expect(result[i][\"error-type\"]).to.eql(\"processing-error\");",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t\"node\": [\"R1\", \"R2\"]\n\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on R1 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1e73642-2208-4b67-a340-982fa1d60ddb",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on R2 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9bc9b39f-9496-4d0b-bac2-3fe7fb6c5a42",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R1 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5a479c3-f2fc-4c90-9d73-03b4f33c1d15",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting interface on R2 no connection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca4d649f-2ff3-4d7a-8935-09db77749efa",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit out-of-sync-one-router",
					"item": [
						{
							"name": "configure interface loopback456 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd92e647-23d0-4044-b498-ea8566385121",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback456\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						},
						{
							"name": "show existing loopback456 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43acd435-e7ce-4c47-8167-68c85ff40d1f",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"interface\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.contain(\"Loopback456\")",
											"});",
											"pm.test(\"description\", function () {",
											"  pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.contain(\"description from uniconfig native\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback123 on R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb4a6eac-7eee-4a8e-b7fa-a43159f5bedd",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback123 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9149df6-9119-423e-8a61-e4c683589f96",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit out of sync",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7148aa2-3af0-44bb-bfb8-86ab493bdfb2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"//in uniconfig-native by design it is not implemented the check of the fingerprint ",
											"//so in case of out of sync the commit should success even if there are changes in the device",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Overall status: \" + pm.response.json()[\"output\"][\"overall-status\"], function () {",
											"    pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"});",
											"",
											"var results = [];",
											"var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"    for(var i = 0; i < result.length; i++){",
											"        results[i] = result[i][\"node-id\"];",
											"    }",
											"",
											"pm.test(\"Commited node R1 status: complete \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"            break;",
											"        }",
											"            var found = results.includes('R1');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R2 status: ignored \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R2\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_complete\"));",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"input\": {\n                \"target-nodes\": {\n                \t\"node\": [\"R1\",\"R2\"]\n                }\n            }\n        }"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing loopback123 on operational R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd3fc50b-04cb-45b6-9b29-797b802a80e3",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing loopback123 on operational R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1795c6f7-10f5-4c4b-943e-7c460ca64f4a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting loopback456 on operational R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0334118-3cbb-44dd-b2da-e9fd821047a0",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						},
						{
							"name": "show existing loopback123 on R1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05648922-8a26-4763-9331-0da8b8eb192e",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show existing loopback123 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec2b91b3-744a-4a06-a3fa-783e4af5774a",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show existing loopback456 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fbab093-d09f-4c1b-9012-379677bada56",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback456\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete loopback456 from R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0df2aead-0d7d-4719-8fd5-4399a04a784e",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting loopback456 on R2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dda703fa-c3ff-4f73-a3ac-5f3088c3aaa2",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback456",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback456"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Checked commit no-rollback",
					"item": [
						{
							"name": "configure loopback on R1 bad config no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2ded8b24-07f8-4099-bc6d-5269f7b055ed",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n           \n            \n            \"mtus\": {\n                    \"mtu\": [{\n                           \"owner\": \"loopback\",\n                           \"mtu\": 1400\n                          }]\n            },\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure loopback on R2 no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc281ef7-df1d-4ed2-a04f-496d3d6ef10b",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 201\", function () {",
											"  pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"interface-configuration\": [\n        {\n            \"active\": \"act\",\n            \"interface-name\": \"Loopback123\",\n            \"description\": \"description from uniconfig native\",\n            \"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\": {\n                \"addresses\": {\n                    \"primary\": {\n                        \"address\": \"1.2.3.4\",\n                        \"netmask\": \"255.255.255.128\",\n                        \"route-tag\": 22\n                    }\n                }\n            },\n            \"interface-virtual\": [\n                null\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "commit no-rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7e92f70-fa1f-4528-9796-33231f866e34",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Validate overall-configuration-status\", function() {",
											"        pm.expect(pm.response.json()[\"output\"][\"overall-status\"]).to.eql(\"fail\");",
											"    });",
											"    var results = [];",
											"    var result = pm.response.json()[\"output\"][\"node-results\"][\"node-result\"];",
											"        for(var i = 0; i < result.length; i++){",
											"            results[i] = result[i][\"node-id\"];",
											"        }",
											"",
											"pm.test(\"Commited node R2 status: complete \", function () {",
											"        for(var i = 0; i < result.length; i++){",
											"            if( result[i][\"node-id\"] == \"R2\"){",
											"                pm.expect(result[i][\"node-id\"]).to.eql(\"R2\");",
											"                pm.expect(result[i][\"configuration-status\"]).to.eql(\"complete\");",
											"                break;",
											"             }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"    }",
											"});",
											"",
											"pm.test(\"Commited node R1 status: failed due to invalid input \", function () {",
											"    for(var i = 0; i < result.length; i++){",
											"        if( result[i][\"node-id\"] == \"R1\"){",
											"            pm.expect(result[i][\"node-id\"]).to.eql(\"R1\");",
											"            pm.expect(result[i][\"configuration-status\"]).to.eql(postman.getEnvironmentVariable(\"operations_result_fail\"));",
											"            pm.expect(result[i][\"error-type\"]).to.eql(\"processing-error\");",
											"            //this is no rollback test case we do not expect a rollback",
											"            pm.expect(result[i][\"rollback-status\"]).to.not.exist",
											"            pm.expect(result[i][\"error-message\"]).to.contain(\"This operation is not supported: The interface owner has not registered support for MTU\");",
											"            break;",
											"        }",
											"            var found = results.includes('R2');",
											"            pm.expect(found).to.be.true;",
											"",
											"    }",
											"",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\": {\n    \"do-rollback\": false,\n    \"target-nodes\": {\n    \t\"node\": [\"R1\",\"R2\"]\n\t}\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/uniconfig-manager:checked-commit",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"uniconfig-manager:checked-commit"
									]
								}
							},
							"response": []
						},
						{
							"name": "check nonexisting interface on R1 no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "974bb357-d1ea-46a4-9762-20dbf9c753d1",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R1/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R1",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "check existing interface on R2 no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16a76ee9-ef7d-4665-8018-03658028895d",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operational/network-topology:network-topology/topology/uniconfig/node/R2/frinx-uniconfig-topology:configuration/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operational",
										"network-topology:network-topology",
										"topology",
										"uniconfig",
										"node",
										"R2",
										"frinx-uniconfig-topology:configuration",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show no interface configuration on R1 no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4067b3d7-d627-454e-a676-ce057dc97c5e",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R1/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R1",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface configuration on R2 no rollback",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8487f933-55f9-44ce-8390-b9b078e21c31",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Interface configuration \", function () {",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"active\"]).to.eql(\"act\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-name\"]).to.eql(\"Loopback123\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"description\"]).to.eql(\"description from uniconfig native\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"address\"]).to.eql(\"1.2.3.4\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"netmask\"]).to.eql(\"255.255.255.128\");",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"Cisco-IOS-XR-ipv4-io-cfg:ipv4-network\"][\"addresses\"][\"primary\"][\"route-tag\"]).to.eql(22);",
											"    pm.expect(pm.response.json()[\"interface-configuration\"][0][\"interface-virtual\"]).to.eql([ null ]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_netconf}}/node/R2/yang-ext:mount/Cisco-IOS-XR-ifmgr-cfg:interface-configurations/interface-configuration/act/Loopback123",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_netconf}}",
										"node",
										"R2",
										"yang-ext:mount",
										"Cisco-IOS-XR-ifmgr-cfg:interface-configurations",
										"interface-configuration",
										"act",
										"Loopback123"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6169e7e6-024d-4554-88b9-b49ffdd01afc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5447649e-f95b-4dd9-93db-c5ada1330595",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}