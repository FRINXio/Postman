{
	"info": {
		"_postman_id": "c46f3e08-a7e7-497a-8a02-002a13ad93a2",
		"name": "pc_unified_sub_com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "XR5 subinterface common",
			"description": null,
			"item": [
				{
					"name": "XR5 subinterface common READERS",
					"description": null,
					"item": [
						{
							"name": "delete previous subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72b44f81-9b0a-4ee5-b591-7c2c3f3609ce",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n commit\n end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface null without ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d89873c-133a-4390-ad56-749984847ee8",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1353daee-f9b4-457b-8600-1dbd10dc8012",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}.{{test_sub_interface_index}}\n description testing subinterface\n encapsulation dot1Q {{vlan_id}}\n commit\n end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured subinterface common",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7efc97e5-deba-4cc4-aacf-da5f66c14896",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"//description",
											"pm.test(\"Validate config description = testing subinterface\", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"description\"]).to.eql(\"testing subinterface\");",
											"});",
											"//name",
											"pm.test(\"Validate config name =GigabitEthernet0/0/0/0.44 \", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"test_sub_interface\") + '.' + pm.environment.get(\"test_sub_interface_index\"));",
											"});",
											"//vlan-id",
											"pm.test(\"Validate vlan-id = \" + pm.environment.get(\"vlan_id\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-vlan:vlan\"][\"config\"][\"vlan-id\"]).to.eql(JSON.parse(pm.environment.get(\"vlan_id\")));",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure null subinterface ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eaf4e2ae-6b4d-41e9-ba3a-3c032c1e17d5",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}\n ipv4 address {{net3}} {{netmask}}\n commit\n end\"\n  }\n}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured null interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											"//prefix-length",
											"pm.test(\"Validate prefix-length = \" + pm.environment.get(\"netmask_prefix\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"prefix-length\"]).to.eql(JSON.parse(pm.environment.get(\"netmask_prefix\")));",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete previous subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61940ba4-1cb0-4428-b0e5-290d4a81c36a",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n commit\n end\"\n  }\n}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconcile",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "XR subinterface common CRUD",
			"description": null,
			"item": [
				{
					"name": "XR subinterface common CRUD Setup",
					"description": null,
					"item": [
						{
							"name": "delete subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show deleted subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "XR subinterface common READERS",
					"description": null,
					"item": [
						{
							"name": "delete previouse subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9494f72a-3baa-4291-b06a-a9d7e8684454",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n commit\n end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface null without ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d9edafa-6655-4e33-a52c-1c6e69fa27ed",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}.{{test_sub_interface_index}}\n description testing subinterface\n encapsulation dot1Q {{vlan_id}}\n commit\n end\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured subinterface common",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3b4ffa2-3092-4752-b9a0-4cb21392bdb5",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"//description",
											"pm.test(\"Validate state description = testing subinterface\", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"description\"]).to.eql(\"testing subinterface\");",
											"});",
											"//description",
											"pm.test(\"Validate config description = testing subinterface\", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"description\"]).to.eql(\"testing subinterface\");",
											"});",
											"//name",
											"pm.test(\"Validate state name = GigabitEthernet0/0/0/0.44\", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"name\"]).to.eql(pm.environment.get(\"test_sub_interface\") + '.' + pm.environment.get(\"test_sub_interface_index\"));",
											"});",
											"//name",
											"pm.test(\"Validate config name =GigabitEthernet0/0/0/0.44 \", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"test_sub_interface\") + '.' + pm.environment.get(\"test_sub_interface_index\"));",
											"});",
											"//vlan-id",
											"pm.test(\"Validate vlan-id = \" + pm.environment.get(\"vlan_id\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-vlan:vlan\"][\"config\"][\"vlan-id\"]).to.eql(JSON.parse(pm.environment.get(\"vlan_id\")));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure null subinterface ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a39ed8c6-24f4-4d60-b5a8-1ffe586d6271",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}\n ipv4 address {{net3}} {{netmask}}\n commit\n end\"\n  }\n}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured null interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ced8171-abc2-45f5-ae2b-08d2f09303d5",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete previouse subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6326a99-6522-4b1b-88c1-4bc9d92d8fa1",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n commit\n end\"\n  }\n}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconcile",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Classic subinterface common",
			"description": null,
			"item": [
				{
					"name": "Classic subinterface common READERS",
					"description": null,
					"item": [
						{
							"name": "delete previouse subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74c50a12-07a3-4b57-aa7d-4279b872fab8",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n exit\n exit\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show nonexisting subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "show interface null without ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f0a1c2f-b7c9-48db-9477-532ef0b794a5",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody);",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "738aca3e-ab2a-46e7-a417-8d801cd92d87",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}.{{test_sub_interface_index}}\n description testing subinterface\n encapsulation dot1Q {{vlan_id}}\n exit\n exit\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured subinterface common",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e44936ff-7026-4a3c-88c3-98cca10bd1ef",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
											"});",
											"//name",
											"pm.test(\"Validate name = \" + pm.environment.get(\"test_sub_interface\")+'.'+pm.environment.get(\"test_sub_interface_index\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"name\"]).to.eql(pm.environment.get(\"test_sub_interface\")+'.'+pm.environment.get(\"test_sub_interface_index\"));",
											"});",
											"//vlan-id",
											"pm.test(\"Validate vlan-id = \" + pm.environment.get(\"vlan_id\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-vlan:vlan\"][\"config\"][\"vlan-id\"]).to.eql(JSON.parse(pm.environment.get(\"vlan_id\")));",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
											"});",
											"//enabled",
											"pm.test(\"Validate enabled = \" + pm.environment.get(\"l3_vpn_bgp_protocol_enabled\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"enabled\"]).to.eql(JSON.parse(pm.environment.get(\"l3_vpn_bgp_protocol_enabled\")));",
											"});",
											"//name",
											"pm.test(\"Validate name = \" + pm.environment.get(\"test_sub_interface\")+'.'+pm.environment.get(\"test_sub_interface_index\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"name\"]).to.eql(pm.environment.get(\"test_sub_interface\")+'.'+pm.environment.get(\"test_sub_interface_index\"));",
											"});",
											"//description",
											"pm.test(\"Validate description = \", function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"description\"]).to.eql(\"testing subinterface\");",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "configure null subinterface ipv4",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38dbb070-9b9d-4c34-bd8b-02dddfdb45b4",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n interface {{test_sub_interface}}\n ip address {{net3}} {{netmask}}\n exit\n exit\"\n  }\n}"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "show configured null interface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4ece2ff-51a1-4cfc-a383-6883b86229e5",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											"//ip",
											"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
											"});",
											"//prefix-length",
											"pm.test(\"Validate prefix-length = \" + pm.environment.get(\"netmask_prefix\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"prefix-length\"]).to.eql(JSON.parse(pm.environment.get(\"netmask_prefix\")));",
											"});",
											"//index",
											"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
											"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"frinx-openconfig-interfaces:interfaces",
										"interface",
										"{{test_sub_interface_url}}",
										"subinterfaces",
										"subinterface",
										"{{test_sub_interface_index_null}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete previouse subinterface",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f20c5e6a-629d-4b2d-b2e5-b143d3b3da67",
										"type": "text/javascript",
										"exec": [
											"console.log(\"Request data: \" + request.data.toString());",
											"console.log(\"Response: \" + responseBody)",
											"",
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"input\" :\n  {\n     \"ios-cli:command\" : \"conf t\n no interface {{test_sub_interface}}.{{test_sub_interface_index}}\n interface {{test_sub_interface}}\n no ip address\n exit\n exit\"\n  }\n}\n"
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/operations/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/cli-unit-generic:execute-and-read",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"operations",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										"cli-unit-generic:execute-and-read"
									]
								}
							},
							"response": []
						},
						{
							"name": "reconcile",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Success\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YWRtaW46YWRtaW4="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id_cli}}/node/{{node_id}}/yang-ext:mount/",
									"protocol": "http",
									"host": [
										"{{odl_ip}}"
									],
									"port": "8181",
									"path": [
										"restconf",
										"config",
										"network-topology:network-topology",
										"topology",
										"{{topology_id_cli}}",
										"node",
										"{{node_id}}",
										"yang-ext:mount",
										""
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Tests",
			"description": null,
			"item": [
				{
					"name": "subinterface common CRUD",
					"description": null,
					"item": [
						{
							"name": "subinterface common CRUD basic",
							"description": null,
							"item": [
								{
									"name": "create subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4728de70-bf54-4717-84c8-54626713f9f7",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": \n        {\n            \"index\": {{test_sub_interface_index}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index}},\n                \"description\": \"testing subinterface\",\n                \"enabled\": true\n            }\n           \n        }\n    \n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "create vlan and update description",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a581d06b-239e-4c20-9a7b-45d19f3fe4c9",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": {{test_sub_interface_index}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index}},\n                \"enabled\": true,\n                \"description\": \"updated subinterface description\"\n            },\n            \n            \"frinx-openconfig-vlan:vlan\": {\n                \"config\": {\n                \t\"vlan-id\": {{vlan_id}}\n                }\n            }\n\n        }\n    ]\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show subinterface common",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08f2f198-8471-4e7b-bd24-c4e604dd20e7",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var description = \"updated subinterface description\";",
													"pm.test(\"Validate description\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"description\"]).to.eql(description);",
													"});",
													"pm.test(\"Validate description\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"description\"]).to.eql(description);",
													"});",
													"",
													"var ifname = String(pm.environment.get(\"cdp_lldp_test_interface\")) + \".\" + String(pm.environment.get(\"test_sub_interface_index\"));",
													"pm.test(\"Validate name\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"name\"]).to.eql(ifname);",
													"});",
													"pm.test(\"Validate name\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"name\"]).to.eql(ifname);",
													"});",
													"",
													"pm.test(\"Validate index\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
													"});",
													"pm.test(\"Validate index\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"state\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
													"});",
													"pm.test(\"Validate index\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
													"});",
													"pm.test(\"Validate vlan-id\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-vlan:vlan\"][\"config\"][\"vlan-id\"]).to.eql(JSON.parse(pm.environment.get(\"vlan_id\")));",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "edb294ba-3365-4ecc-82a0-eea896d01e43",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ef2ce9a2-621a-46b7-b3e3-6fede99f48ef",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "subinterface common CRUD global",
							"description": null,
							"item": [
								{
									"name": "create subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7d68c946-89e5-4ab1-823e-1955c9831a8a",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": \n        {\n            \"index\": {{test_sub_interface_index}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index}},\n                \"description\": \"testing subinterface\",\n                \"enabled\": true\n            }\n           \n        }\n    \n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "create vlan and update description",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6840142f-4ca4-44e9-af3f-d2fde425cb29",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": {{test_sub_interface_index}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index}},\n                \"enabled\": true,\n                \"description\": \"updated subinterface description\"\n            },\n            \n            \"frinx-openconfig-vlan:vlan\": {\n                \"config\": {\n                \t\"vlan-id\": {{vlan_id}}\n                }\n            }\n\n        }\n    ]\n}\n"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show subinterface common",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "44f097f9-7442-4c2d-b014-0692ad44c10c",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"var description = \"updated subinterface description\";",
													"",
													"pm.test(\"Validate description\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"description\"]).to.eql(description);",
													"});",
													"",
													"var ifname = String(pm.environment.get(\"test_sub_interface\")) + \".\" + String(pm.environment.get(\"test_sub_interface_index\"));",
													"pm.test(\"Validate name\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"name\"]).to.eql(ifname);",
													"});",
													"",
													"pm.test(\"Validate index\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
													"});",
													"",
													"pm.test(\"Validate index\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index\")));",
													"});",
													"pm.test(\"Validate vlan-id\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-vlan:vlan\"][\"config\"][\"vlan-id\"]).to.eql(JSON.parse(pm.environment.get(\"vlan_id\")));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "create ipv4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2be6577e-d9f9-48c6-9ffd-e71752006bc3",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": {{test_sub_interface_index_null}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index_null}},\n                \"enabled\": true\n            },\n            \"ipv4\": {\n                \"addresses\": {\n                    \"address\": {\n                        \"ip\": {{net3}},\n                        \"config\": {\n                            \"ip\": {{net3}},\n                            \"prefix-length\": 31\n                        }\n                    }\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index_null}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show ipv4 subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "774e6831-037e-454f-94ec-2747e3026428",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"//ip",
													"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
													"});",
													"//ip",
													"pm.test(\"Validate ip = \" + pm.environment.get(\"net3\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"ip\"]).to.eql(pm.environment.get(\"net3\"));",
													"});",
													"//prefix-length",
													"pm.test(\"Validate prefix-length = \" + pm.environment.get(\"netmask_prefix\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"prefix-length\"]).to.eql(JSON.parse(pm.environment.get(\"netmask_prefix\")));",
													"});",
													"//index",
													"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
													"});",
													"//index",
													"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index_null}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "update ipv4",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d86953d-559c-4a60-8b3f-ba0ba207b53d",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Request data: \" + request.data.toString());",
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subinterface\": [\n        {\n            \"index\": {{test_sub_interface_index_null}},\n            \"config\": {\n                \"index\": {{test_sub_interface_index_null}},\n                \"enabled\": true\n            },\n            \"ipv4\": {\n                \"addresses\": {\n                    \"address\": {\n                        \"ip\": {{ip42}},\n                        \"config\": {\n                            \"ip\": {{ip42}},\n                            \"prefix-length\": 27\n                        }\n                    }\n                }\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index_null}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "show updated ipv4 subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "525a5be8-b70e-4e5a-8652-4d386e082524",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"//ip",
													"pm.test(\"Validate ip = \" + pm.environment.get(\"ip42\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"ip\"]).to.eql(pm.environment.get(\"ip42\"));",
													"});",
													"//ip",
													"pm.test(\"Validate ip = \" + pm.environment.get(\"ip42\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"ip\"]).to.eql(pm.environment.get(\"ip42\"));",
													"});",
													"//prefix-length",
													"pm.test(\"Validate prefix-length = 27\", function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"frinx-openconfig-if-ip:ipv4\"][\"addresses\"][\"address\"][0][\"config\"][\"prefix-length\"]).to.eql(27);",
													"});",
													"//index",
													"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
													"});",
													"//index",
													"pm.test(\"Validate index = \" + pm.environment.get(\"test_sub_interface_index_null\"), function() {",
													"  pm.expect(pm.response.json()[\"subinterface\"][0][\"config\"][\"index\"]).to.eql(JSON.parse(pm.environment.get(\"test_sub_interface_index_null\")));",
													"});",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index_null}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46b2c7c7-8dd7-4b78-8d92-fd9aadb85751",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete ipv4 from null subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "646d37ad-0ba6-42ac-b5d6-c5225550f29d",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index_null}}/ipv4",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index_null}}",
												"ipv4"
											]
										}
									},
									"response": []
								},
								{
									"name": "show deleted subinterface",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9415fe1d-96ae-4a25-a503-99acadd41f7d",
												"type": "text/javascript",
												"exec": [
													"console.log(\"Response: \" + responseBody)",
													"",
													"pm.test(\"Success\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic YWRtaW46YWRtaW4="
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{odl_ip}}:8181/restconf/config/network-topology:network-topology/topology/{{topology_id}}/node/{{node_id}}/yang-ext:mount/frinx-openconfig-interfaces:interfaces/interface/{{test_sub_interface_url}}/subinterfaces/subinterface/{{test_sub_interface_index}}",
											"protocol": "http",
											"host": [
												"{{odl_ip}}"
											],
											"port": "8181",
											"path": [
												"restconf",
												"config",
												"network-topology:network-topology",
												"topology",
												"{{topology_id}}",
												"node",
												"{{node_id}}",
												"yang-ext:mount",
												"frinx-openconfig-interfaces:interfaces",
												"interface",
												"{{test_sub_interface_url}}",
												"subinterfaces",
												"subinterface",
												"{{test_sub_interface_index}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}